{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/basket/basket.component.ts","./src/app/basket/basket.component.html","./src/app/checkout-order/checkout-order.component.ts","./src/app/checkout-order/checkout-order.component.html","./src/app/contacts/contacts.component.ts","./src/app/contacts/contacts.component.html","./src/app/courier-orders/courier-orders.component.ts","./src/app/courier-orders/courier-orders.component.html","./src/app/create-restaurant/create-restaurant.component.ts","./src/app/create-restaurant/create-restaurant.component.html","./src/app/entity/AuthTokens.ts","./src/app/entity/Menu.ts","./src/app/entity/Restaurant.ts","./src/app/entity/User.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/orders-archieve/orders-archieve.component.ts","./src/app/orders-archieve/orders-archieve.component.html","./src/app/orders/orders.component.ts","./src/app/orders/orders.component.html","./src/app/reference/reference.component.ts","./src/app/reference/reference.component.html","./src/app/restaurant/restaurant.component.ts","./src/app/restaurant/restaurant.component.html","./src/app/restaurants/restaurants.component.ts","./src/app/restaurants/restaurants.component.html","./src/app/services/auth.service.ts","./src/app/services/menu.service.ts","./src/app/services/orders.service.ts","./src/app/services/payments.service.ts","./src/app/services/restaurants.service.ts","./src/app/services/users.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/userspage/userspage.component.ts","./src/app/userspage/userspage.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from \"@angular/core\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {HomeComponent} from \"./home/home.component\";\nimport {ErrorPageComponent} from \"./error-page/error-page.component\";\nimport {RestaurantsComponent} from \"./restaurants/restaurants.component\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {RestaurantComponent} from \"./restaurant/restaurant.component\";\nimport {CreateRestaurantComponent} from \"./create-restaurant/create-restaurant.component\";\nimport {SignupComponent} from \"./signup/signup.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\nimport {UserspageComponent} from \"./userspage/userspage.component\";\nimport {ReferenceComponent} from \"./reference/reference.component\";\nimport {ContactsComponent} from \"./contacts/contacts.component\";\nimport {CheckoutOrderComponent} from \"./checkout-order/checkout-order.component\";\nimport {BasketComponent} from \"./basket/basket.component\";\nimport {CourierOrdersComponent} from \"./courier-orders/courier-orders.component\";\nimport {OrdersArchieveComponent} from \"./orders-archieve/orders-archieve.component\";\n\nconst routes: Routes = [\n  {path: '', component: HomeComponent},\n  {path: 'restaurants', component: RestaurantsComponent},\n  {path: 'restaurants/:id', component: RestaurantComponent},\n  {path: 'createrestaurant', component: CreateRestaurantComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'orders', component: OrdersComponent},\n  {path: 'userspage', component: UserspageComponent},\n  {path: 'reference', component: ReferenceComponent},\n  {path: 'contacts', component: ContactsComponent},\n  {path: 'checkoutorder', component: CheckoutOrderComponent},\n  {path: 'basket', component: BasketComponent},\n  {path: 'courierorders', component: CourierOrdersComponent},\n  {path: 'ordersarchieve', component: OrdersArchieveComponent},\n\n  {path: 'error', component: ErrorPageComponent},\n  {path: '**', redirectTo: '/error'}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {AuthService} from \"./services/auth.service\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent implements OnInit{\n  title = 'FrontRestaurant';\n  isAuthenticated: boolean = false\n  amountInBasket: number = 0\n  role: string = ''\n\n  constructor(\n    public authService: AuthService,\n    private cookieService: CookieService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.cookieService.check('isAuthenticated')) {\n      this.isAuthenticated = (this.cookieService.get('isAuthenticated') == 'OK')\n      this.authService.setAuth(this.isAuthenticated)\n      this.role = this.cookieService.get('role')\n      if (this.cookieService.get('dishes')) {\n        let amountDishes = JSON.parse(this.cookieService.get('dishes')).length\n        this.amountInBasket += amountDishes\n      }\n      if (this.cookieService.get('drinks')) {\n        let amountDrinks = JSON.parse(this.cookieService.get('drinks')).length\n        this.amountInBasket += amountDrinks\n      }\n    }\n  }\n  isAuth(): boolean {\n    return this.authService.getIsAuth()\n  }\n\n  logout() {\n    this.authService.logout()\n  }\n\n}\n","<!-- Header start -->\n<header class=\"header\">\n  <div class=\"wrapper\">\n    <div class=\"header__wrapper\">\n      <div class=\"header__logo\">\n        <a href=\"/\" class=\"header__logo-link\">\n          <img src=\"../assets/images/restaurantLogo.png\" alt=\"Discover Amazing places in Japan\" class=\"header__logo-pic\">\n        </a>\n      </div>\n\n      <nav class=\"header__nav\">\n        <ul class=\"header__list\">\n          <li class=\"header__item\">\n            <a [routerLink]=\"['/']\" class=\"header__link\">Главная</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"role != 'deliveryman'\">\n            <a [routerLink]=\"['/restaurants']\" class=\"header__link\">Выбор ресторана</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"role == 'admin'\">\n            <a href=\"#\" class=\"header__link\" [routerLink]=\"['/userspage']\">Пользователи</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"isAuth() && role != 'deliveryman'\">\n            <a href=\"#\" class=\"header__link\" [routerLink]=\"['/orders']\">Заказы</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"role == 'deliveryman'\">\n            <a href=\"#\" class=\"header__link\" [routerLink]=\"['/courierorders']\">Текущие Заказы</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"role == 'deliveryman'\">\n            <a href=\"#\" class=\"header__link\" [routerLink]=\"['/ordersarchieve']\">Архив</a>\n          </li>\n          <li class=\"header__item\" *ngIf=\"!isAuth(); else authorized\">\n            <a [routerLink]=\"['/login']\" class=\"header__link\">Вход</a>\n          </li>\n          <ng-template #authorized>\n            <li class=\"header__item\">\n              <div class=\"authorized-header-basket\">\n                <button class=\"btn btn-logout\" (click)=\"logout()\">Выйти</button>\n                <a class=\"basket-link\" [routerLink]=\"['/basket']\">В корзине: {{amountInBasket}} <img class=\"basket-img\" src=\"assets/images/basket_icon.png\" alt=\"K\"></a>\n              </div>\n            </li>\n          </ng-template>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</header>\n<!-- Header end -->\n\n<router-outlet></router-outlet>\n\n<footer>\n  <div class=\"footer-container\">\n    <div class=\"info-about-devs\">\n      <img src=\"favicon.ico\" alt=\"\" class=\"info-logo\">\n      <h2 class=\"info-ref btn\" routerLink=\"/reference\">Справка</h2>\n      <h2 class=\"info-ref btn\" routerLink=\"/contacts\">Контакты</h2>\n      <div class=\"socials\">\n        <h2 class=\"info-ref title-i-r\">Социальные сети:</h2>\n        <div class=\"social-icons\">\n          <h2 class=\"info-ref\"><img src=\"https://pngimg.com/uploads/vkontakte/vkontakte_PNG25.png\" alt=\"vk\" class=\"icons\"></h2>\n          <h2 class=\"info-ref\"><img src=\"https://cdn.optipic.io/site-102371/local/templates/stroyakustika/img/tg-icon.png\" alt=\"telegram\" class=\"icons\" style=\"width: 40px\"></h2>\n          <h2 class=\"info-ref\"><img src=\"https://avatanplus.com/files/resources/original/56be426a8454f152d733702e.png\" alt=\"youtube\" class=\"icons\"></h2>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport { RestaurantsComponent } from './restaurants/restaurants.component';\nimport { LoginComponent } from './login/login.component';\nimport { RestaurantComponent } from './restaurant/restaurant.component';\nimport { CreateRestaurantComponent } from './create-restaurant/create-restaurant.component';\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport { SignupComponent } from './signup/signup.component';\nimport { OrdersComponent } from './orders/orders.component';\nimport { UserspageComponent } from './userspage/userspage.component';\nimport { ReferenceComponent } from './reference/reference.component';\nimport { ContactsComponent } from './contacts/contacts.component';\nimport { CheckoutOrderComponent } from './checkout-order/checkout-order.component';\nimport { BasketComponent } from './basket/basket.component';\nimport { CourierOrdersComponent } from './courier-orders/courier-orders.component';\nimport { OrdersArchieveComponent } from './orders-archieve/orders-archieve.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ErrorPageComponent,\n    RestaurantsComponent,\n    LoginComponent,\n    RestaurantComponent,\n    CreateRestaurantComponent,\n    SignupComponent,\n    OrdersComponent,\n    UserspageComponent,\n    ReferenceComponent,\n    ContactsComponent,\n    CheckoutOrderComponent,\n    BasketComponent,\n    CourierOrdersComponent,\n    OrdersArchieveComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {Dish} from \"../entity/Dish\";\nimport {Drink} from \"../entity/Drink\";\n\n@Component({\n  selector: 'app-basket',\n  templateUrl: './basket.component.html',\n  styleUrls: ['./basket.component.scss']\n})\nexport class BasketComponent implements OnInit {\n\n  role: string\n  dishesBasket: Dish[] = []\n  drinksBasket: Drink[] = []\n\n  constructor(\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n    this.role = this.cookieService.get('role')\n    if (this.cookieService.get('dishes')) {\n      this.dishesBasket = JSON.parse(this.cookieService.get('dishes'))\n    }\n    if (this.cookieService.get('drinks')) {\n      this.drinksBasket = JSON.parse(this.cookieService.get('drinks'))\n    }\n    // console.log(this.dishesBasket)\n    // console.log(this.drinksBasket)\n  }\n\n  getDishes() {\n    return this.dishesBasket\n  }\n  getDrinks() {\n    return this.drinksBasket\n  }\n\n  deleteDish(i: any) {\n    this.dishesBasket = this.dishesBasket.filter(((dish, index) => index != i))\n    this.cookieService.set('dishes', JSON.stringify(this.dishesBasket))\n    setTimeout(() => {\n      window.location.reload()\n    }, 400)\n  }\n  deleteDrink(i: any) {\n    this.drinksBasket = this.drinksBasket.filter(((drink, index) => index != i))\n    this.cookieService.set('drinks', JSON.stringify(this.drinksBasket))\n    setTimeout(() => {\n      window.location.reload()\n    }, 400)\n  }\n\n  getTotal() {\n    let totalCost = 0\n    if (this.cookieService.get('dishes')) {\n      totalCost += JSON.parse(this.cookieService.get('dishes'))\n        .map((cost: Dish) => {\n          return cost.price\n        })\n        .reduce((currentSum: number, currentNumber: number) => {\n          return currentSum + currentNumber\n        }, 0)\n    }\n    if (this.cookieService.get('drinks')) {\n      totalCost += JSON.parse(this.cookieService.get('drinks'))\n        .map((cost: Drink) => {\n          return cost.price\n        })\n        .reduce((currentSum: number, currentNumber: number) => {\n          return currentSum + currentNumber\n        }, 0)\n    }\n    return totalCost\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"main-style-box\">\n      <h2 class=\"page_title\" *ngIf=\"dishesBasket.length == 0 && drinksBasket.length == 0; else basketOrders\">Корзина пуста</h2>\n<!--              <button type=\"button\" class=\"btn\" (click)=\"getTotal()\">Показать</button>-->\n      <ng-template #basketOrders>\n        <div class=\"basket-orders\">\n          <h2 class=\"basket-title\" style=\"margin-bottom: 20px;\">Блюда:</h2>\n          <div class=\"order-elements\">\n            <div class=\"order-element\" *ngFor=\"let dish of getDishes(); let i = index\">\n              <p class=\"order-elements-info\">{{dish.name}}</p>\n              <p class=\"order-elements-info\"><b>Цена:</b> {{dish.price}}</p>\n              <button type=\"button\" class=\"btn\" (click)=\"deleteDish(i)\">Удалить</button>\n            </div>\n          </div>\n          <h2 class=\"basket-title\" style=\"margin: 20px 0;\">Напитки:</h2>\n          <div class=\"order-elements\">\n            <div class=\"order-element\" *ngFor=\"let drink of getDrinks(); let i = index\">\n              <p class=\"order-elements-info\">{{drink.name}}</p>\n              <p class=\"order-elements-info\"><b>Цена:</b> {{drink.price}}</p>\n              <button type=\"button\" class=\"btn\" (click)=\"deleteDrink(i)\">Удалить</button>\n            </div>\n          </div>\n        <p class=\"total\" style=\"margin-top: 20px; align-self: flex-end\"><b>Общая стоимость:</b> {{getTotal()}}</p>\n        <button class=\"btn\" style=\"margin-top: 20px; align-self: flex-end\">Оформить</button>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n@Component({\n  selector: 'app-checkout-order',\n  templateUrl: './checkout-order.component.html',\n  styleUrls: ['./checkout-order.component.scss']\n})\nexport class CheckoutOrderComponent implements OnInit {\n\n  hallDelToggle: boolean = true\n  formCheckoutOrderHall: any\n  formCheckoutOrderDelivery: any\n  telephoneLength: number = 10\n  hallSchemeToggle: boolean = false;\n  checkedFaster: boolean = true;\n  checkedTime: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private cookieService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n    this.formCheckoutOrderHall = this.fb.group({\n      id: [null],\n      number: [null],\n      fio: [[this.cookieService.get('surname'), this.cookieService.get('name')], Validators.required],\n      telephoneNumber: [9608223422,[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      date: ['', Validators.required],\n      timeStart: ['', Validators.required],\n      amountOfPlaces: ['', Validators.required],\n      table: ['', Validators.required],\n      status: [''],\n      comment: ['']\n    })\n\n    this.formCheckoutOrderDelivery = this.fb.group({\n      id: [null],\n      number: [null, Validators.required],\n      fio: ['', Validators.required],\n      telephoneNumber: [null,[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      address: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      status: ['', Validators.required],\n      comment: ['']\n    })\n\n  }\n\n\n\n  submit() {\n    const checkoutInfo1 = {...this.formCheckoutOrderHall.value}\n    const checkoutInfo2 = {...this.formCheckoutOrderHall.value}\n    console.log(checkoutInfo1)\n    console.log(checkoutInfo2)\n    this.router.navigate(['/orders'])\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"main-style-box\">\n      <div class=\"toggle-btns\">\n        <button class=\"btn\" (click)=\"hallDelToggle = true\" [ngClass]=\"{\n        'active-btn': hallDelToggle\n        }\">Заказ в зале</button>\n        <button class=\"btn\" (click)=\"hallDelToggle = false\" [ngClass]=\"{\n        'active-btn': !hallDelToggle\n        }\">Заказ на доставку</button>\n      </div>\n\n<!--      Форма заказа в зале-->\n      <div class=\"checkout__box\" *ngIf=\"hallDelToggle\">\n        <form class=\"checkout-order__form\" [formGroup]=\"formCheckoutOrderHall\" (ngSubmit)=\"submit()\">\n<!--          <div class=\"info-with-card-flex\">-->\n            <div class=\"form-elements\">\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Фамилия Имя</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"fio\" style=\"width: 230px\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('fio')?.invalid && formCheckoutOrderHall.get('fio')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Номер телефона</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"telephoneNumber\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('telephoneNumber')?.invalid && formCheckoutOrderHall.get('telephoneNumber')?.touched\"\n                  class=\"validation\"\n                >\n                  <small *ngIf=\"formCheckoutOrderHall.get('telephoneNumber')?.errors?.['required']\">\n                    Заполните поле\n                  </small>\n                  <small *ngIf=\"formCheckoutOrderHall.get('telephoneNumber')?.hasError('minlength')\">\n                    Введите телефон длиной {{formCheckoutOrderHall.get('telephoneNumber')?.errors?.['minlength'].requiredLength}} символов.\n                    Вы ввели {{formCheckoutOrderHall.get('telephoneNumber')?.errors?.['minlength'].actualLength}}.\n                  </small>\n                  <small *ngIf=\"formCheckoutOrderHall.get('telephoneNumber')?.hasError('maxlength')\">\n                    Введите телефон длиной {{formCheckoutOrderHall.get('telephoneNumber')?.errors?.['maxlength'].requiredLength}} символов.\n                    Вы ввели {{formCheckoutOrderHall.get('telephoneNumber')?.errors?.['maxlength'].actualLength}}.\n                  </small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Дата бронирования</label>\n                  <input type=\"date\" class=\"input-text\" formControlName=\"date\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('date')?.invalid && formCheckoutOrderHall.get('date')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Время бронирования</label>\n                  <input type=\"time\" class=\"input-text\" formControlName=\"timeStart\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('timeStart')?.invalid && formCheckoutOrderHall.get('timeStart')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Количество мест</label>\n                  <input type=\"text\" class=\"input-text short\" formControlName=\"amountOfPlaces\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('amountOfPlaces')?.invalid && formCheckoutOrderHall.get('amountOfPlaces')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Столик №</label>\n                  <input type=\"text\" class=\"input-text short\" formControlName=\"table\">\n                  <a class=\"link-text scheme-link\" (click)=\"hallSchemeToggle = !hallSchemeToggle\">Открыть схему зала</a>\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderHall.get('table')?.invalid && formCheckoutOrderHall.get('table')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n\n              <div class=\"hall-scheme\" *ngIf=\"hallSchemeToggle\">\n                Здесь будет схема зала\n              </div>\n\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Комментарий</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"comment\">\n                </div>\n              </div>\n\n            </div>\n\n<!--            <div class=\"card-info\">-->\n<!--              <h2 class=\"card-title\">Данные карты</h2>-->\n\n<!--              <div class=\"card\">-->\n<!--                <input type=\"text\" class=\"card-number\" placeholder=\"Номер карты\">-->\n<!--                <div class=\"label-input__flex\">-->\n<!--                  <label class=\"label-text\">Действует</label>-->\n<!--                  <input type=\"text\" class=\"card-validity\" placeholder=\"До\">-->\n<!--                </div>-->\n<!--                <div class=\"label-input__flex\">-->\n<!--                  <label class=\"label-text\">Владелец</label>-->\n<!--                  <input type=\"text\" class=\"card-owner\" placeholder=\"Имя Фамилия\">-->\n<!--                </div>-->\n<!--                <div class=\"label-input__flex cvv\">-->\n<!--                  <label class=\"label-text\">CVV</label>-->\n<!--                  <input type=\"text\" class=\"card-cvv\" placeholder=\"3 цифры\">-->\n<!--                </div>-->\n<!--              </div>-->\n<!--            </div>-->\n<!--          </div>-->\n\n          <button class=\"btn checkout__btn\" type=\"submit\" [disabled]=\"formCheckoutOrderHall.invalid\">Оформить</button>\n        </form>\n      </div>\n<!--      Конец формы заказа в зале-->\n\n<!--      Форма заказа на доставку-->\n      <div class=\"checkout__box\" *ngIf=\"!hallDelToggle\">\n        <form class=\"checkout-order__form\" [formGroup]=\"formCheckoutOrderDelivery\" (ngSubmit)=\"submit()\">\n<!--          <div class=\"info-with-card-flex\">-->\n            <div class=\"form-elements\">\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Фамилия Имя</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"fio\" style=\"width: 230px\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderDelivery.get('fio')?.invalid && formCheckoutOrderDelivery.get('fio')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Номер телефона</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"telephoneNumber\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderDelivery.get('telephoneNumber')?.invalid && formCheckoutOrderDelivery.get('telephoneNumber')?.touched\"\n                  class=\"validation\"\n                >\n                  <small *ngIf=\"formCheckoutOrderDelivery.get('telephoneNumber')?.errors?.['required']\">\n                    Заполните поле\n                  </small>\n                  <small *ngIf=\"formCheckoutOrderDelivery.get('telephoneNumber')?.hasError('minlength')\">\n                    Введите телефон длиной {{formCheckoutOrderDelivery.get('telephoneNumber')?.errors?.['minlength'].requiredLength}} символов.\n                    Вы ввели {{formCheckoutOrderDelivery.get('telephoneNumber')?.errors?.['minlength'].actualLength}}.\n                  </small>\n                  <small *ngIf=\"formCheckoutOrderDelivery.get('telephoneNumber')?.hasError('maxlength')\">\n                    Введите телефон длиной {{formCheckoutOrderDelivery.get('telephoneNumber')?.errors?.['maxlength'].requiredLength}} символов.\n                    Вы ввели {{formCheckoutOrderDelivery.get('telephoneNumber')?.errors?.['maxlength'].actualLength}}.\n                  </small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Адрес доставки</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"address\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderDelivery.get('address')?.invalid && formCheckoutOrderDelivery.get('address')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Дата доставки</label>\n                  <input type=\"date\" class=\"input-text\" formControlName=\"date\">\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderDelivery.get('date')?.invalid && formCheckoutOrderDelivery.get('date')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Время доставки</label>\n                  <div class=\"checkboxs\">\n                    <div class=\"checkbox\">\n                      <input class=\"checkbox-input\" type=\"checkbox\" id=\"hall\" value=\"coding\" (change)=\"checkedTime = !checkedTime; checkedFaster = !checkedFaster\" [checked]=\"checkedFaster\">\n                      <label class=\"checkbox-label\" for=\"hall\">Поскорее</label>\n                    </div>\n                    <div class=\"checkbox\">\n                      <input class=\"checkbox-input\" type=\"checkbox\" id=\"delivery\" value=\"delivery\" (change)=\"checkedFaster = !checkedFaster; checkedTime = !checkedTime\" [checked]=\"checkedTime\">\n                      <label class=\"checkbox-label\" for=\"delivery\">Ко времени</label>\n                    </div>\n                    <input type=\"time\" class=\"input-text\" formControlName=\"time\" *ngIf=\"checkedTime\">\n                  </div>\n\n                </div>\n                <div\n                  *ngIf=\"formCheckoutOrderDelivery.get('time')?.invalid && formCheckoutOrderDelivery.get('time')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"checkout-order__form-control\">\n                <div class=\"label-input__flex\">\n                  <label class=\"label-text\">Комментарий</label>\n                  <input type=\"text\" class=\"input-text\" formControlName=\"comment\">\n                </div>\n              </div>\n\n            </div>\n\n<!--            <div class=\"card-info\">-->\n<!--              <h2 class=\"card-title\">Данные карты</h2>-->\n\n<!--              <div class=\"card\">-->\n<!--                <input type=\"text\" class=\"card-number\" placeholder=\"Номер карты\">-->\n<!--                <div class=\"label-input__flex\">-->\n<!--                  <label class=\"label-text\">Действует</label>-->\n<!--                  <input type=\"text\" class=\"card-validity\" placeholder=\"До\">-->\n<!--                </div>-->\n<!--                <div class=\"label-input__flex\">-->\n<!--                  <label class=\"label-text\">Владелец</label>-->\n<!--                  <input type=\"text\" class=\"card-owner\" placeholder=\"Имя Фамилия\">-->\n<!--                </div>-->\n<!--                <div class=\"label-input__flex cvv\">-->\n<!--                  <label class=\"label-text\">CVV</label>-->\n<!--                  <input type=\"text\" class=\"card-cvv\" placeholder=\"3 цифры\">-->\n<!--                </div>-->\n<!--              </div>-->\n<!--            </div>-->\n<!--          </div>-->\n\n          <button class=\"btn checkout__btn\" type=\"submit\" [disabled]=\"formCheckoutOrderDelivery.invalid\">Оформить</button>\n        </form>\n\n      </div>\n<!--      Конец формы доставки-->\n\n    </div>\n  </div>\n</div>\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.scrollTo(0,0)\n  }\n\n  ngAfterViewInit() {\n    window.addEventListener(\"scroll\", this.onWindowScroll, true)\n  }\n\n  @HostListener(\"window:scroll\", ['$event'])\n  onWindowScroll() {\n    console.log(window.scrollY)\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"contacts__box\">\n      <h1 class=\"contacts_title\">Контакты сотрудников</h1>\n      <div class=\"contacts_personel\">\n        <h2 style=\"margin-bottom: 15px\">Администраторы:</h2>\n        <div class=\"managers\">\n          <div class=\"person\">\n            <p>Геккель Виктория:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79280214157\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> gekkel@gmail.com\n              </p>\n            </div>\n          </div>\n          <div class=\"person\">\n            <p>Малинин Игорь:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79608223422\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> igorswayts@gmail.com\n              </p>\n            </div>\n          </div>\n          <div class=\"person\">\n            <p>Маратов Серик:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79173939001\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> serikssau@gmail.com\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"contacts_personel\">\n        <h2 style=\"margin-bottom: 15px\">Главные менеджеры:</h2>\n        <div class=\"managers\">\n          <div class=\"person\">\n            <p>Иванов Петр:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79602134457\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> ivanovPetr@gmail.com\n              </p>\n            </div>\n          </div>\n          <div class=\"person\">\n            <p>Филатов Константин:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79603144567\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> filatovK@gmail.com\n              </p>\n            </div>\n          </div>\n          <div class=\"person\">\n            <p>Рублев Антон:</p>\n            <div class=\"person-data\">\n              <p class=\"contacts_text\">\n                <b>Телефон:</b> +79623144339\n              </p>\n              <p class=\"contacts_text\">\n                <b>Email:</b> rubA@gmail.com\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {OrdersService} from \"../services/orders.service\";\n\n@Component({\n  selector: 'app-courier-orders',\n  templateUrl: './courier-orders.component.html',\n  styleUrls: ['./courier-orders.component.scss']\n})\nexport class CourierOrdersComponent implements OnInit {\n\n  constructor(\n    private ordersService: OrdersService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getOrders() {\n    return this.ordersService.ordersCourierActive\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"active-orders\">\n      <div class=\"main-style-box\" *ngFor=\"let order of getOrders()\">\n        <div class=\"info-status-flex\">\n          <div class=\"info\">\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Номер заказа:</small>\n              <small>{{order.id + 1}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Поступил:</small>\n              <small>{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Доставить до:</small>\n              <small>{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Адрес:</small>\n              <small>{{order.address}}</small>\n            </div>\n          </div>\n          <div class=\"statuses\">\n            <div class=\"order-elem\">\n              <small style=\"width: 70px\">Статус:</small>\n              <button class=\"btn\"><small>{{order.isDone}}</small> <img src=\"https://cdn0.iconfinder.com/data/icons/flat-round-arrow-arrow-head/512/Red_Arrow_Down-2-1024.png\"></button>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 70px\">Сумма:</small>\n              <small>{{order.price}}</small>\n            </div>\n          </div>\n\n\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {RestaurantsService} from \"../services/restaurants.service\";\nimport {Menu} from \"../entity/Menu\";\n\nclass CookieService {\n}\n\n@Component({\n  selector: 'app-create-restaurant',\n  templateUrl: './create-restaurant.component.html',\n  styleUrls: ['./create-restaurant.component.scss']\n})\nexport class CreateRestaurantComponent implements OnInit {\n\n  newTokens: any\n  formCreateRest: any\n\n  constructor(\n    private http: HttpClient,\n    private restaurantsService: RestaurantsService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.formCreateRest = this.fb.group({\n      // id: [null],\n      restaurantName: ['', Validators.required],\n      address: ['', Validators.required],\n      kitchenSpeciality: ['', Validators.required],\n      wallpaperURL: ['', Validators.required],\n      staff: [[]],\n      orders: [[]],\n      tables: this.fb.array([\n        this.fb.group({\n          restaurantId: [null],\n          numberOfSeats: ['', Validators.required],\n          startOfBookingTime: ['2022-12-12T23:23:39.833+00:00'],\n          booked: [true]\n        })\n      ]),\n      menu: this.fb.group({\n        dishes: this.fb.array([\n          this.fb.group({\n            name: ['', Validators.required],\n            category: ['', Validators.required],\n            description: ['', Validators.required],\n            price: ['', Validators.required],\n            weight: ['', Validators.required],\n            calories: ['', Validators.required],\n            menu: [null]\n          })\n        ]),\n        drinks: this.fb.array([\n          this.fb.group({\n            name: ['', Validators.required],\n            category: ['', Validators.required],\n            description: ['', Validators.required],\n            price: ['', Validators.required],\n            priceOfBottle: ['', Validators.required],\n            volume: ['', Validators.required],\n            menu: [null]\n          })\n        ]),\n      }),\n      latitude: [50.212562],\n      longitude: [50.18084]\n    })\n  }\n\n  get tables() {\n    return this.formCreateRest.controls[\"tables\"] as FormArray\n  }\n  addTable() {\n    const tablesForm = this.fb.group({\n      restaurantId: [null],\n      numberOfSeats: ['', Validators.required],\n      startOfBookingTime: ['2022-12-12T23:23:39.833+00:00'],\n      booked: [true]\n    })\n\n    this.tables.push(tablesForm)\n  }\n  deleteTable(tableIndex: number) {\n    this.tables.removeAt(tableIndex)\n  }\n\n  get dishes() {\n    return this.formCreateRest.controls[\"menu\"].controls['dishes'] as FormArray\n  }\n\n  addDish() {\n    const dishesForm = this.fb.group({\n      name: ['', Validators.required],\n      category: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      weight: ['', Validators.required],\n      calories: ['', Validators.required],\n      menu: [null]\n    })\n\n    this.dishes.push(dishesForm)\n  }\n  deleteDish(dishIndex: number) {\n    this.dishes.removeAt(dishIndex)\n  }\n\n  get drinks() {\n    return this.formCreateRest.controls[\"menu\"].controls['drinks'] as FormArray\n  }\n\n  addDrink() {\n    const drinksForm = this.fb.group({\n      name: ['', Validators.required],\n      category: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      volume: ['', Validators.required],\n      priceOfBottle: ['', Validators.required],\n      menu: [null]\n    })\n\n    this.drinks.push(drinksForm)\n  }\n  deleteDrink(drinkIndex: number) {\n    this.drinks.removeAt(drinkIndex)\n  }\n\n  submit() {\n    const newRestData = {...this.formCreateRest.value}\n    let finalRestData = {...newRestData}\n    let restaurantId: number = 0\n    let menu: Menu = {...newRestData.menu}\n    if(this.formCreateRest.valid) {\n      // newRestData.telephoneNumber = Number(newRestData.telephoneNumber)\n      // this.formCreateRest.reset()\n    }\n    Object.keys(finalRestData).forEach((key: any) => {\n      if (key == 'menu')\n        delete finalRestData[key]\n    })\n    finalRestData = {...newRestData, ...{menu: null}}\n    console.log(finalRestData)\n    console.log(menu)\n    console.log(JSON.stringify(finalRestData))\n    this.restaurantsService.addRestaurant(finalRestData).subscribe({\n      next: (msg) => {\n        console.log(msg.body)\n        this.restaurantsService.addMenu(JSON.parse(String(msg.body)).id, menu).subscribe({\n          next: (msg) => {\n            console.log(msg)\n          },\n          error: (err) => {\n            console.log('error', err)\n          },\n          complete: () => {}\n        })\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {\n      }\n    })\n  }\n\n  showCon() {\n    console.log(this.formCreateRest.controls['tables'].controls[0].controls['numberOfSeats'])\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"create__rest-form\">\n    <button class=\"btn btn-go-back\" type=\"button\" routerLink=\"/restaurants\">Назад</button>\n<!--    <button class=\"btn btn-go-back\" type=\"button\" (click)=\"showCon()\">Показать</button>-->\n    <form class=\"create__form\" [formGroup]=\"formCreateRest\" (ngSubmit)=\"submit()\">\n      <h1 class=\"create__title\">Создание нового ресторана</h1>\n      <div class=\"create__form-control\">\n        <input type=\"text\" name=\"rName\" class=\"create__input\" placeholder=\"Имя ресторана\" formControlName=\"restaurantName\">\n        <div\n          *ngIf=\"formCreateRest.get('restaurantName')?.invalid && formCreateRest.get('restaurantName')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"create__form-control\">\n        <input type=\"text\" name=\"rAddress\" class=\"create__input\" placeholder=\"Адрес ресторана\" formControlName=\"address\">\n        <div\n          *ngIf=\"formCreateRest.get('address')?.invalid && formCreateRest.get('address')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"create__form-control\">\n        <input type=\"text\" name=\"kitchenSpeciality\" class=\"create__input\" placeholder=\"Специализация кухни\" formControlName=\"kitchenSpeciality\">\n        <div\n          *ngIf=\"formCreateRest.get('kitchenSpeciality')?.invalid && formCreateRest.get('kitchenSpeciality')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"create__form-control\">\n        <input type=\"text\" name=\"wallpaperURL\" class=\"create__input\" placeholder=\"Ссылка на изображение\" formControlName=\"wallpaperURL\">\n        <div\n          *ngIf=\"formCreateRest.get('wallpaperURL')?.invalid && formCreateRest.get('wallpaperURL')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"create__form-control\">\n        <div class=\"tables-array\" formArrayName=\"tables\">\n          <h2 class=\"create__title\">Количество столов:</h2>\n          <div class=\"tables-contorl-btns\">\n            <button class=\"btn add-btn\" type=\"button\" [disabled]=\"tables.length == 1\" (click)=\"deleteTable(tables.length-1)\">&minus;</button>\n            <input type=\"text\" [value]=\"tables.length\" style=\"width: 50px; text-align: center\">\n            <button class=\"btn add-btn\" type=\"button\" (click)=\"addTable()\">+</button>\n          </div>\n          <div class=\"numberOfSeats-array-field\" *ngFor=\"let table of tables.controls; let i = index\">\n            <div class=\"flex-column\">\n              <div class=\"numberOfSeats-array\" [formGroupName]=\"i\">\n                <input type=\"text\" class=\"create__input\" placeholder=\"Количество мест\" style=\"width: 200px; text-align: center\" formControlName=\"numberOfSeats\">\n              </div>\n              <div\n                *ngIf=\"formCreateRest.controls['tables'].controls[i].controls['numberOfSeats']?.invalid && formCreateRest.controls['tables'].controls[i].controls['numberOfSeats']?.touched\"\n                class=\"validation\"\n              >\n                <small>Заполните поле</small>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class=\"menu-group\" formGroupName=\"menu\">\n        <h1 class=\"create__title\" style=\"font-size: 20px; margin-bottom: 15px\">Меню:</h1>\n        <div formArrayName=\"dishes\">\n          <h2 class=\"create__title\" style=\"margin-bottom: 10px\">Блюда:</h2>\n          <button class=\"btn add-btn\" type=\"button\" (click)=\"addDish()\">Добавить блюдо</button>\n          <div *ngFor=\"let dish of dishes.controls; let i = index\">\n            <div class=\"new-dish-drink\" [formGroupName]=\"i\">\n              <div class=\"new-dish-drink-flex-inputs\">\n                <input formControlName=\"name\" placeholder=\"Название блюда\" class=\"new-dish-drink__input\">\n                <input formControlName=\"category\" placeholder=\"Категория блюда\" class=\"new-dish-drink__input\">\n                <input formControlName=\"description\" placeholder=\"Описание блюда\" class=\"new-dish-drink__input\">\n                <input formControlName=\"price\" placeholder=\"Цена блюда\" class=\"new-dish-drink__input\">\n                <input formControlName=\"weight\" placeholder=\"Вес блюда\" class=\"new-dish-drink__input\">\n                <input formControlName=\"calories\" placeholder=\"Калорийность блюда\" class=\"new-dish-drink__input\">\n              </div>\n              <button class=\"btn\" [disabled]=\"dishes.length == 1\" (click)=\"deleteDish(i)\">Удалить блюдо</button>\n            </div>\n          </div>\n        </div>\n\n        <div formArrayName=\"drinks\">\n          <h1 class=\"create__title\" style=\"margin: 15px 0\">Напитки:</h1>\n          <button class=\"btn add-btn\" type=\"button\" (click)=\"addDrink()\">Добавить напиток</button>\n          <div *ngFor=\"let drink of drinks.controls; let i = index\">\n            <div class=\"new-dish-drink\" [formGroupName]=\"i\">\n              <div class=\"new-dish-drink-flex-inputs\">\n                <input formControlName=\"name\" placeholder=\"Название напитка\" class=\"new-dish-drink__input\">\n                <input formControlName=\"category\" placeholder=\"Категория напитка\" class=\"new-dish-drink__input\">\n                <input formControlName=\"description\" placeholder=\"Описание напитка\" class=\"new-dish-drink__input\">\n                <input formControlName=\"price\" placeholder=\"Цена напитка\" class=\"new-dish-drink__input\">\n                <input formControlName=\"volume\" placeholder=\"Объем напитка\" class=\"new-dish-drink__input\">\n                <input formControlName=\"priceOfBottle\" placeholder=\"Цена бутылки\" class=\"new-dish-drink__input\">\n              </div>\n              <button class=\"btn\" [disabled]=\"drinks.length == 1\" (click)=\"deleteDrink(i)\">Удалить напиток</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <button class=\"btn create__btn\" type=\"submit\" >Создать</button>\n<!--      <button class=\"btn create__btn\" type=\"submit\" [disabled]=\"formCreateRest.invalid\">Создать</button>-->\n\n    </form>\n  </div>\n</div>\n","export class AuthTokens {\n  access_token!: string;\n  refresh_token!: string;\n}\n","import {Dish} from \"./Dish\";\nimport {Drink} from \"./Drink\";\n\n\nexport class Menu {\n  id: number\n  dishes: any\n  drinks: any\n}\n","import {User} from \"./User\";\nimport {Order} from \"./Order\";\nimport {Menu} from \"./Menu\";\nimport {TableInRestaurant} from \"./TableInRestaurant\";\n\nexport class Restaurant {\n  id?: number\n  restaurantName: string\n  address: string\n  kitchenSpeciality: string\n  wallpaperURL: string\n  icon: string\n  description: string\n  staff: any\n  orders: any\n  tables: any\n  menu: any\n  latitude: number\n  longitude: number\n}\n","import {Restaurant} from \"./Restaurant\";\nimport {Role} from \"./Role\";\n\nexport class User {\n  id: number\n  surname: string\n  name: string\n  telephone: number\n  password: string\n  address: string\n  myOrders: any\n  latitude: number\n  longitude: number\n  placeOfWork: any\n  role: Role\n  working: boolean\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.scss']\n})\nexport class ErrorPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error-page works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {RestaurantsService} from \"../services/restaurants.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public restaurantsService: RestaurantsService) { }\n\n  ngOnInit(): void {\n    window.scrollTo(0,0)\n  }\n\n}\n","\n<main class=\"main\">\n  <!-- Intro start -->\n  <section class=\"intro\">\n    <div class=\"wrapper\">\n      <div class=\"intro-background\">\n        <h1 class=\"intro__title\">\n          Рестораны всех кухонь мира\n        </h1>\n        <p class=\"intro__subtitle\">\n          В нашей сети ресторанов VIS, Вы, можете попробовать блюда русской, американской, грузинской, итальянской, японской и китайской кухни\n        </p>\n      </div>\n    </div>\n  </section>\n  <!-- Intro end -->\n\n  <!-- restaurants start -->\n  <section class=\"restaurants\">\n    <div class=\"restaurants__wrap\">\n      <h2 class=\"restaurants__title\">\n        Добро пожаловать в VIS\n      </h2>\n      <div class=\"restaurants__cards\">\n        <div class=\"restaurants__card\" *ngFor=\"let rest of restaurantsService.restaurants\">\n          <div class=\"restaurants__card-pic\">\n            <img src=\"{{rest.icon}}\" alt=\"Welcome to Odigo!\" class=\"restaurants__card-thumb\">\n          </div>\n          <h3 class=\"restaurants__card-title\">\n            {{rest.restaurantName}}\n          </h3>\n          <p class=\"restaurants__card-desc\">\n            {{rest.description}}\n          </p>\n          <a class=\"restaurants__card-more\" [routerLink]=\"['/restaurants/', rest.id]\">\n            Подробнее\n          </a>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!-- restaurants end -->\n\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from \"../services/auth.service\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isAuthenticated: boolean = false\n  errorToggle: boolean = false\n  roles: string[] = ['Admin', 'Manager', 'Courier', 'Client']\n  username: string = ''\n  password: string = '';\n  private erStatus: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private cookieService: CookieService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.cookieService.check('isAuthenticated')) {\n      this.isAuthenticated = (this.cookieService.get('isAuthenticated') == 'OK')\n    }\n  }\n\n  onLoginClick() {\n    if (this.username != '' && this.password != '') {\n      // this.isAuthenticated = this.authService.login(this.username)\n      this.authService.login(this.username, this.password)\n      this.errorToggle = false\n    }\n    else\n      this.errorToggle = true\n  }\n}\n","<div class=\"back-img\">\n  <div class=\"wrapper\">\n    <div class=\"login__container\">\n      <div class=\"login__box\">\n        <h1 class=\"login__header\">Вход</h1>\n        <input type=\"text\" class=\"login__input\" placeholder=\"Телефон\" [(ngModel)]=\"username\" (keyup.enter)=\"onLoginClick()\">\n        <input type=\"password\" class=\"login__input\" placeholder=\"Пароль\" [(ngModel)]=\"password\" (keyup.enter)=\"onLoginClick()\">\n        <div class=\"error__box validation\" *ngIf=\"errorToggle\">\n          <p class=\"error-text\" *ngIf=\"username == ''\">Введите телефон</p>\n          <p class=\"error-text\" *ngIf=\"password == ''\">Введите пароль</p>\n        </div>\n        <button class=\"btn reg-log-btn\" (click)=\"onLoginClick()\">Войти</button>\n        <button class=\"btn reg-log-btn\" routerLink=\"/signup\">Регистрация</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {OrdersService} from \"../services/orders.service\";\n\n@Component({\n  selector: 'app-orders-archieve',\n  templateUrl: './orders-archieve.component.html',\n  styleUrls: ['./orders-archieve.component.scss']\n})\nexport class OrdersArchieveComponent implements OnInit {\n\n  constructor(\n    private ordersService: OrdersService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getOrders() {\n    return this.ordersService.ordersCourierDone\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"active-orders\">\n      <div class=\"main-style-box\" *ngFor=\"let order of getOrders()\">\n        <div class=\"info-status-flex\">\n          <div class=\"info\">\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Номер заказа:</small>\n              <small>{{order.id + 1}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Поступил:</small>\n              <small>{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Доставить до:</small>\n              <small>{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 150px\">Адрес:</small>\n              <small>{{order.address}}</small>\n            </div>\n          </div>\n          <div class=\"statuses\">\n            <div class=\"order-elem\">\n              <small style=\"width: 70px\">Статус:</small>\n              <small [ngClass]=\"{\n              green: order.isDone == 'Доставлен',\n              red: order.isDone == 'Отменен'\n              }\">{{order.isDone}}</small>\n            </div>\n            <div class=\"order-elem\">\n              <small style=\"width: 70px\">Сумма:</small>\n              <small>{{order.price}}</small>\n            </div>\n          </div>\n\n\n\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {OrdersService} from \"../services/orders.service\";\nimport {MenuService} from \"../services/menu.service\";\nimport {PaymentsService} from \"../services/payments.service\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {Dish} from \"../entity/Dish\";\nimport {Drink} from \"../entity/Drink\";\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n\n  role: string = ''\n  toggleInfo: boolean = false\n  ordersToggle: boolean = true\n  createOrdrTggl: boolean = false\n  formCreateOrderHall: any\n  formCreateOrderDeliv: any\n  telephoneLength: number = 10\n  checkedH: boolean[] = []\n  checkedD: boolean[] = []\n  dishesCategories: string[] = []\n  drinksCategories: string[] = []\n  currentDishes: Dish[] = []\n  sortedDishes: Dish[] = []\n  currentDrinks: Drink[] = []\n  sortedDrinks: Drink[] = []\n  amount: number[] = []\n\n  constructor(\n    private ordersService: OrdersService,\n    private paymentsService: PaymentsService,\n    private menuService: MenuService,\n    private cookieService: CookieService,\n    private fb: FormBuilder\n    ) { }\n\n  ngOnInit(): void {\n    this.role = this.cookieService.get('role')\n    this.formCreateOrderHall = this.fb.group({\n      id: [null],\n      number: [null],\n      fio: ['', Validators.required],\n      telephone: ['', [\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      date: ['', Validators.required],\n      timeStart: ['', Validators.required],\n      amountOfPlaces: ['', Validators.required],\n      table: ['', Validators.required],\n      restaurantName: ['', Validators.required],\n      status: ['', Validators.required],\n      dishes: [''],\n      comment: ['']\n    })\n\n    this.formCreateOrderDeliv = this.fb.group({\n      id: [null],\n      number: [null, Validators.required],\n      fio: ['', Validators.required],\n      telephone: [null,[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      address: ['', Validators.required],\n      date: ['', Validators.required],\n      time: ['', Validators.required],\n      restaurantName: ['', Validators.required],\n      status: ['', Validators.required],\n      dishes: ['', Validators.required],\n      comment: ['']\n    })\n    this.checkedH.length = this.ordersService.orders.length\n    this.checkedD.length = this.ordersService.orders.length\n    this.checkedH.fill(true)\n    this.checkedD.fill(false)\n    // this.currentDishes = this.menuService.dishes.filter((menuId, index) => {\n    //   return 1 == this.menuService.dishes[index].menu_id\n    // })\n    // this.currentDrinks = this.menuService.drinks.filter((menuId, index) => {\n    //   return 1 == this.menuService.drinks[index].menu_id\n    // })\n    this.sortedDishes = this.currentDishes\n    this.sortedDrinks = this.currentDrinks\n    this.dishesCategories.push(this.currentDishes[0]?.category)\n    this.drinksCategories.push(this.currentDrinks[0]?.category)\n    this.amount.length = this.currentDishes.length + this.currentDrinks.length\n    this.amount.fill(0)\n  }\n\n  getOrdersDelivery() {\n    return this.ordersService.orders\n  }\n\n  getOrdersHall() {\n    return this.ordersService.ordersHall\n  }\n\n  // getDishes() {\n  //   return this.menuService.dishes\n  // }\n  //\n  // getDrinks() {\n  //   return this.menuService.drinks\n  // }\n\n  getPayment(index: number) {\n    return this.paymentsService.payment[index]\n  }\n\n  // check(elem: any) {\n  //   let id = elem.id;\n  //   if(id=='delivery') {\n  //     ('#hall').removeAttr(\"checked\");\n  //   }\n  //   if(id=='ucheb') {\n  //     ('#delivery').removeAttr(\"checked\");\n  //   }\n  // }\n\n  dishCategories() {\n    this.currentDishes.map(category => {\n      if(!this.dishesCategories.includes(category.category))\n        this.dishesCategories.push(category.category)\n    })\n    return this.dishesCategories\n  }\n  drinkCategories() {\n    this.currentDrinks.map(category => {\n      if(!this.drinksCategories.includes(category.category))\n        this.drinksCategories.push(category.category)\n    })\n    return this.drinksCategories\n  }\n\n  sortDishes(cat: string) {\n    this.sortedDishes = this.currentDishes.filter((category, index) => category.category === cat)\n  }\n  sortDrinks(cat: string) {\n    this.sortedDrinks = this.currentDrinks.filter((category, index) => category.category === cat)\n  }\n\n  // incValDish(i: number) {\n  //   this.sortedDishes[i].amount++\n  // }\n  // incValDrink(i: number) {\n  //   this.sortedDrinks[i].amount++\n  // }\n  //\n  // decValDish(i: number) {\n  //   this.sortedDishes[i].amount--\n  // }\n  // decValDrink(i: number) {\n  //   this.sortedDrinks[i].amount--\n  // }\n\n  submit() {\n    if(this.formCreateOrderHall.valid) {\n      const newUserData = {...this.formCreateOrderHall.value}\n      newUserData.telephoneNumber = Number(newUserData.telephoneNumber)\n      console.log(newUserData)\n      this.formCreateOrderHall.reset()\n    }\n    if(this.formCreateOrderDeliv.valid) {\n      const newUserData = {...this.formCreateOrderDeliv.value}\n      newUserData.telephoneNumber = Number(newUserData.telephoneNumber)\n      console.log(newUserData)\n      this.formCreateOrderDeliv.reset()\n    }\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"orders-container\">\n    <div class=\"orders-box-admin\" *ngIf=\"role == 'admin' || role == 'manager'\">\n\n      <div class=\"create-order\">\n        <div class=\"control-elements\">\n          <button class=\"btn btn-create-order\" (click)=\"createOrdrTggl = !createOrdrTggl\">\n            <small *ngIf=\"!createOrdrTggl\">Создать заказ</small>\n            <small *ngIf=\"createOrdrTggl\">Отменить</small>\n          </button>\n          <div class=\"search-elements\">\n            <input type=\"text\" class=\"search-field\">\n            <button class=\"btn\">Поиск</button>\n          </div>\n        </div>\n        <div class=\"create-order__box\" *ngIf=\"createOrdrTggl\">\n<!--          Form Hall-->\n          <form class=\"create-order__form\" [formGroup]=\"formCreateOrderHall\" (ngSubmit)=\"submit()\" *ngIf=\"ordersToggle\">\n            <div class=\"form-elements\">\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"camountOfPlaces\" class=\"create-ordr__input\" placeholder=\"ФИ заказчика\" formControlName=\"fio\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('fio')?.invalid && formCreateOrderHall.get('fio')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"camountOfPlaces\" class=\"create-ordr__input\" placeholder=\"Количество мест\" formControlName=\"amountOfPlaces\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('amountOfPlaces')?.invalid && formCreateOrderHall.get('amountOfPlaces')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"cTable\" class=\"create-ordr__input\" placeholder=\"Стол\" formControlName=\"seatNumber\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('seatNumber')?.invalid && formCreateOrderHall.get('seatNumber')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"telephoneNumber\" class=\"create-ordr__input\" placeholder=\"Телефон\" formControlName=\"telephone\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('telephone')?.invalid && formCreateOrderHall.get('telephone')?.touched\"\n                  class=\"validation\"\n                >\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.errors?.['required']\">\n                    Заполните поле\n                  </small>\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.hasError('minlength')\">\n                    Введите телефон длиной {{formCreateOrderHall.get('telephone')?.errors?.['minlength'].requiredLength}} символов.\n                    Вы ввели {{formCreateOrderHall.get('telephone')?.errors?.['minlength'].actualLength}}.\n                  </small>\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.hasError('maxlength')\">\n                    Введите телефон длиной {{formCreateOrderHall.get('telephone')?.errors?.['maxlength'].requiredLength}} символов.\n                    Вы ввели {{formCreateOrderHall.get('telephone')?.errors?.['maxlength'].actualLength}}.\n                  </small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"orderedTime\" name=\"orderedTime\" class=\"create-ordr__input\" placeholder=\"Дата\" formControlName=\"orderedTime\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('orderedTime')?.invalid && formCreateOrderHall.get('orderedTime')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"time\" name=\"time\" class=\"create-ordr__input\" placeholder=\"Время\" formControlName=\"timeStart\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('timeStart')?.invalid && formCreateOrderHall.get('timeStart')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"isDone\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Статус </option>\n                  <option class=\"hallOrDev__option\" value=\"Hall\">Обрабатывается</option>\n                  <option class=\"hallOrDev__option\" value=\"Hall\">Готовится</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Готов</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Доставляется</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Доставлен</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('isDone')?.invalid && formCreateOrderHall.get('isDone')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите статус</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"restaurant\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Название Ресторана </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('restaurant')?.invalid && formCreateOrderHall.get('restaurant')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите ресторан</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"dishes\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Блюда </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n<!--                <div-->\n<!--                  *ngIf=\"formCreateOrderHall.get('dishes')?.invalid && formCreateOrderHall.get('isDone')?.touched\"-->\n<!--                  class=\"validation\"-->\n<!--                >-->\n<!--                  <small>Выберите ресторан</small>-->\n<!--                </div>-->\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"dishes\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Напитки </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n<!--                <div-->\n<!--                  *ngIf=\"formCreateOrderHall.get('dishes')?.invalid && formCreateOrderHall.get('isDone')?.touched\"-->\n<!--                  class=\"validation\"-->\n<!--                >-->\n<!--                  <small>Выберите ресторан</small>-->\n<!--                </div>-->\n              </div>\n\n              <div class=\"menu__dish-drink-card\">\n                <ul class=\"menu__dish-drink-list\" *ngFor=\"let dish of sortedDishes; let i = index\">\n                  <li class=\"item-title\">{{dish.name}}</li>\n                  <li class=\"item-title\">{{dish.description}}</li>\n                  <li><b>Цена: </b>{{dish.price}}</li>\n                  <li><b>Вес: </b>{{dish.weight}}</li>\n                  <li class=\"last-item\"><b>Калории: </b>{{dish.calories}}</li>\n                  <li class=\"inc-dec__item\">\n<!--                    <button class=\"btn btn-inc-dec\" [disabled]=\"sortedDishes[i].amount == 0\" (click)=\"decValDish(i)\">-</button>-->\n<!--                    <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDishes[i].amount\">-->\n<!--                    <button class=\"btn btn-inc-dec\" (click)=\"incValDish(i)\">+</button>-->\n                  </li>\n<!--                  <li><button class=\"btn btn-to-basket\">В корзину</button></li>-->\n                </ul>\n              </div>\n\n            </div>\n            <button class=\"btn reg__btn\" type=\"submit\" [disabled]=\"formCreateOrderHall.invalid\">Создать</button>\n          </form>\n\n\n<!--          Form Delivery-->\n          <form class=\"create-order__form\" [formGroup]=\"formCreateOrderHall\" (ngSubmit)=\"submit()\" *ngIf=\"!ordersToggle\">\n            <div class=\"form-elements\">\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"camountOfPlaces\" class=\"create-ordr__input\" placeholder=\"ФИ заказчика\" formControlName=\"fio\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('fio')?.invalid && formCreateOrderHall.get('fio')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"telephoneNumber\" class=\"create-ordr__input\" placeholder=\"Телефон\" formControlName=\"telephone\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('telephone')?.invalid && formCreateOrderHall.get('telephone')?.touched\"\n                  class=\"validation\"\n                >\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.errors?.['required']\">\n                    Заполните поле\n                  </small>\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.hasError('minlength')\">\n                    Введите телефон длиной {{formCreateOrderHall.get('telephone')?.errors?.['minlength'].requiredLength}} символов.\n                    Вы ввели {{formCreateOrderHall.get('telephone')?.errors?.['minlength'].actualLength}}.\n                  </small>\n                  <small *ngIf=\"formCreateOrderHall.get('telephone')?.hasError('maxlength')\">\n                    Введите телефон длиной {{formCreateOrderHall.get('telephone')?.errors?.['maxlength'].requiredLength}} символов.\n                    Вы ввели {{formCreateOrderHall.get('telephone')?.errors?.['maxlength'].actualLength}}.\n                  </small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"text\" name=\"address\" class=\"create-ordr__input\" placeholder=\"Адрес\" formControlName=\"address\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('address')?.invalid && formCreateOrderHall.get('address')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"orderedTime\" name=\"orderedTime\" class=\"create-ordr__input\" placeholder=\"Дата\" formControlName=\"orderedTime\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('orderedTime')?.invalid && formCreateOrderHall.get('orderedTime')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <input type=\"time\" name=\"time\" class=\"create-ordr__input\" placeholder=\"Время\" formControlName=\"time\">\n                <div\n                  *ngIf=\"formCreateOrderHall.get('time')?.invalid && formCreateOrderHall.get('time')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Заполните поле</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"isDone\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Статус </option>\n                  <option class=\"hallOrDev__option\" value=\"Hall\">Обрабатывается</option>\n                  <option class=\"hallOrDev__option\" value=\"Hall\">Готовится</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Готов</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Доставляется</option>\n                  <option class=\"hallOrDev__option\" value=\"Delivery\">Доставлен</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('isDone')?.invalid && formCreateOrderHall.get('isDone')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите статус</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"restaurant\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Название Ресторана </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('restaurant')?.invalid && formCreateOrderHall.get('restaurant')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите ресторан</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"restaurant\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Блюда </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('restaurant')?.invalid && formCreateOrderHall.get('restaurant')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите ресторан</small>\n                </div>\n              </div>\n              <div class=\"create-order__form-control\">\n                <select class=\"hallOrDev__select2\" name=\"hallOrDev\" formControlName=\"restaurant\">\n                  <option class=\"hallOrDev__option\" value=\"\"> Напитки </option>\n                  <option class=\"hallOrDev__option\" value=\"RK\">Русская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"AK\">Американская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"JK\">Японская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"IK\">Итальянская кухня</option>\n                  <option class=\"hallOrDev__option\" value=\"GK\">Грузинская кухня</option>\n                </select>\n                <div\n                  *ngIf=\"formCreateOrderHall.get('restaurant')?.invalid && formCreateOrderHall.get('restaurant')?.touched\"\n                  class=\"validation\"\n                >\n                  <small>Выберите ресторан</small>\n                </div>\n              </div>\n\n              <div class=\"menu__dish-drink-card\">\n                <ul class=\"menu__dish-drink-list\" *ngFor=\"let dish of sortedDishes; let i = index\">\n                  <li class=\"item-title\">{{dish.name}}</li>\n                  <li class=\"item-title\">{{dish.description}}</li>\n                  <li><b>Цена: </b>{{dish.price}}</li>\n                  <li><b>Вес: </b>{{dish.weight}}</li>\n                  <li class=\"last-item\"><b>Калории: </b>{{dish.calories}}</li>\n                  <li class=\"inc-dec__item\">\n<!--                    <button class=\"btn btn-inc-dec\" [disabled]=\"sortedDishes[i].amount == 0\" (click)=\"decValDish(i)\">-</button>-->\n<!--                    <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDishes[i].amount\">-->\n<!--                    <button class=\"btn btn-inc-dec\" (click)=\"incValDish(i)\">+</button>-->\n                  </li>\n<!--                  <li><button class=\"btn btn-to-basket\">В корзину</button></li>-->\n                </ul>\n              </div>\n\n            </div>\n            <button class=\"btn reg__btn\" type=\"submit\" [disabled]=\"formCreateOrderHall.invalid\">Создать</button>\n          </form>\n        </div>\n      </div>\n\n      <div class=\"toggle-btns\">\n        <button class=\"btn\" (click)=\"ordersToggle = true\" [ngClass]=\"{\n        'active-btn': ordersToggle == true\n        }\">Предварительные заказы</button>\n        <button class=\"btn\" (click)=\"ordersToggle = false\" [ngClass]=\"{\n        'active-btn': ordersToggle == false\n        }\">Заказы на доставку</button>\n      </div>\n\n      <div class=\"orders_hall\" *ngIf=\"ordersToggle\">\n        <table class=\"orders__table\">\n          <tr class=\"table_row\">\n            <th class=\"table_header\">Номер</th>\n<!--            <th class=\"table_header\">Количество мест</th>-->\n            <th class=\"table_header\">Стол</th>\n            <th class=\"table_header\">Дата и время</th>\n<!--            <th class=\"table_header\">Телефон</th>-->\n            <th class=\"table_header\">Статус</th>\n            <th>\n              <p>Изменение</p>\n              <p>Удаление</p>\n            </th>\n          </tr>\n          <tr class=\"table_row\" *ngFor=\"let order of getOrdersHall()\">\n            <td class=\"table_data\" style=\"width: 120px\">{{order.id + 1}}</td>\n<!--            <td class=\"table_data\">{{order.amountOfPlaces}}</td>-->\n            <td class=\"table_data\" style=\"width: 120px\">{{order.seatNumber}}</td>\n            <td class=\"table_data\" style=\"width: 190px\">{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</td>\n<!--            <td class=\"table_data\">{{order.telephone}}</td>-->\n            <td class=\"table_data-isDone\">{{order.isDone}}</td>\n            <td class=\"edit-delete-links\">\n              <a class=\"link-edit__user\">Изменить</a>\n              <a class=\"link-delete__user\">Удалить</a>\n            </td>\n          </tr>\n        </table>\n      </div>\n\n      <div class=\"orders_delivery\" *ngIf=\"!ordersToggle\">\n        <table class=\"orders__table\">\n          <tr class=\"table_row\">\n            <th class=\"table_header\">Номер</th>\n            <th class=\"table_header\">Дата и время</th>\n<!--            <th class=\"table_header\">Адрес</th>-->\n<!--            <th class=\"table_header\">Телефон</th>-->\n            <th class=\"table_header\">Статус</th>\n            <th>\n              <p>Изменение</p>\n              <p>Удаление</p>\n            </th>\n          </tr>\n          <tr class=\"table_row\" *ngFor=\"let order of getOrdersDelivery()\">\n            <td class=\"table_data\" style=\"width: 150px\">{{order.id + 1}}</td>\n            <td class=\"table_data\" style=\"width: 190px\">{{order.orderedTime | date:'dd.MM.yyyy hh:mm'}}</td>\n<!--            <td class=\"table_data\">{{order.address}}</td>-->\n<!--            <td class=\"table_data\">{{order.telephone}}</td>-->\n            <td class=\"table_data-isDone\" style=\"width: 190px\">{{order.isDone}}</td>\n            <td class=\"edit-delete-links\" style=\"width: 190px\">\n              <a class=\"link-edit__user\">Изменить</a>\n              <a class=\"link-delete__user\">Удалить</a>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </div>\n\n    <div class=\"orders-box\" *ngIf=\"role == 'client'\">\n      <div class=\"order\" *ngFor=\"let order of getOrdersDelivery(), let i = index\">\n        <div class=\"order-info\">\n          <div class=\"order-info-b-p-flex ord-num\">\n            <b style=\"margin-right: 10px\">Номер заказа:</b>\n            <p class=\"order-info-element\">{{order.id + 1}}</p>\n          </div>\n          <button class=\"btn show-info-btn\" (click)=\"toggleInfo = !toggleInfo\">\n            <small *ngIf=\"!toggleInfo; else hideInfo\">Информация о позициях</small>\n            <ng-template #hideInfo>Скрыть информацию</ng-template>\n          </button>\n          <div class=\"hidden-info\" *ngIf=\"toggleInfo\">\n            <h2 class=\"info-title\">Блюда</h2>\n            <div class=\"dishes-drinks-info-flex\" style=\"margin-bottom: 20px\">\n<!--              <div class=\"dishes-drinks-info\" *ngFor=\"let dish of getDishes()\">-->\n<!--                <p class=\"dishes-drinks-info-element\">{{dish.name}}</p>-->\n<!--                <p class=\"dishes-drinks-info-element\">{{dish.price}}</p>-->\n<!--              </div>-->\n            </div>\n            <h2 class=\"info-title\">Напитки</h2>\n            <div class=\"dishes-drinks-info-flex\">\n<!--              <div class=\"dishes-drinks-info\" *ngFor=\"let drink of getDrinks(); let i = index\">-->\n<!--                <p class=\"dishes-drinks-info-element\">{{drink.name}}</p>-->\n<!--                <p class=\"dishes-drinks-info-element\">{{drink.price}}</p>-->\n<!--              </div>-->\n            </div>\n          </div>\n          <div class=\"order-info-b-p-flex\">\n            <b style=\"margin-right: 10px\">Название ресторана:</b>\n            <p class=\"order-info-element\">{{order.restaurant}}</p>\n          </div>\n          <div class=\"order-info-b-p-flex\">\n            <b style=\"margin-right: 10px\">Дата заказа:</b>\n            <p class=\"order-info-element\">{{order.orderedTime | date:'dd.MM.yyyy' }}</p>\n          </div>\n        </div>\n\n<!--        <div class=\"checkboxs\">-->\n<!--          <div class=\"checkbox\">-->\n<!--            <input class=\"checkbox-input\" type=\"checkbox\" id=\"hall\" value=\"coding\" (change)=\"checkedD[i] = !checkedD[i]; checkedH[i] = !checkedH[i]\" [checked]=\"checkedH[i]\">-->\n<!--            <label for=\"hall\">В зале</label>-->\n<!--          </div>-->\n<!--          <div class=\"checkbox\">-->\n<!--            <input class=\"checkbox-input\" type=\"checkbox\" id=\"delivery\" value=\"delivery\" (change)=\"checkedH[i] = !checkedH[i]; checkedD[i] = !checkedD[i]\" [checked]=\"checkedD[i]\">-->\n<!--            <label for=\"delivery\">Доставка</label>-->\n<!--          </div>-->\n<!--        </div>-->\n\n        <div class=\"payment-info\">\n<!--          <button class=\"btn\" *ngIf=\"getPayment(i).isDone == false; else paidisDone\" (click)=\"getPayment(i).isDone = true\" [routerLink]=\"['/checkoutorder']\">Оформить</button>-->\n\n            <div class=\"ordder-isDone\">\n              <h2>{{order.isDone}}</h2>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, HostListener, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-reference',\n  templateUrl: './reference.component.html',\n  styleUrls: ['./reference.component.scss']\n})\nexport class ReferenceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.scrollTo(0,0)\n  }\n\n  ngAfterViewInit() {\n    window.addEventListener(\"scroll\", this.onWindowScroll, true)\n  }\n\n  @HostListener(\"window:scroll\", ['$event'])\n  onWindowScroll() {\n    console.log(window.scrollY)\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"reference__box\">\n      <h1 class=\"reference_title\">Информация о разработчиках сайта</h1>\n      <p class=\"reference_text\">\n        Данный проект был разработан студентами Самарского университета имени С.П.Королева.\n      </p>\n\n      <p class=\"reference_text pre\">\n        Создатели проекта:<br>\n        Геккель Виктория<br>\n        Малинин Игорь<br>\n        Маратов Серик<br>\n      </p>\n\n      <p class=\"reference_text\">Автоматизированная система заказов блюд и напитков в ресторанах сети VIS\n      <br>Руководство по использованию:\n      </p>\n      <div class=\"flexforrefli\">\n        <ul class=\"reference-list\">\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#auth1\">Регистрация и авторизация</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#restCh\">Выбор ресторана</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#dishCh\">Выбор блюд</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#drinkCh\">Выбор напитков</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#basket\">Корзина с заказами</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#checkout\">Оформление заказа</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#status\">Статус заказа</a></li>\n          <li class=\"reference-element\"><a class=\"reference-link\" href=\"#history\">История заказов</a></li>\n        </ul>\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"auth1\">Регистрация и авторизация</h1>\n        <p class=\"reference_text\">Перед тем как делать заказ в ресторане вам необходимо зарегистрироваться или если вы уже зарегистрированы, авторизоваться в системе. Для регистрации в системе нажмите на кнопку вход, на верхней панеле сайта. В открывшейся вкладке нажмите на кнопку зарегистрироваться и введите все требуемые данные. После того, как вы нажмете кнопку зарегистрироваться, вход в систему будет выполнен автоматически.</p>\n        <div class=\"img\">\n          <img src=\"../../assets/imgsRef/reg.png\" style=\"width: 600px\">\n        </div>\n        <p class=\"reference_text\">Для авторизации в системе, нажмите на кнопку вход на верхней панеле сайта. В открывшейся вкладке введите номер телефона и пароль, под которыми вы регистрировались на сайте.</p>\n        <div class=\"img\">\n          <img src=\"../../assets/imgsRef/auth.png\" style=\"width: 600px\">\n        </div>\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"restCh\">Выбор ресторана</h1>\n        <p class=\"reference_text\">После авторизации на сайте вы будете автоматически перенаправлены на вкладку выбора ресторана. На данной вкладке вы можете выбрать один из существующих в сети ресторанов нажав на его изображение. После этого вы автоматически попадете на страницу выбранного ресторана, на которой вы сможете выбрать интересующие вас блюда и напитки.</p>\n        <div class=\"img\">\n          <img src=\"../../assets/imgsRef/restCh.png\" style=\"width: 600px\">\n        </div>\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"dishCh\">Выбор блюд</h1>\n        <p class=\"reference_text\">Для выбора блюд пролистайте страницу выбранного ресторана до раздела блюда. В данном разделе вы можете посмотреть названия, описания, граммовку, калорийность и цену блюд. В будущей версии будут добавлены изображения блюд.\n          По нажатию на кнопку категорий блюд вам будут представлены блюда только выбранной категории.\n          Для добавления блюда в корзину необходимо указать количество блюд нажав на кнопку + или вписать его вручную в поле ввода и нажать кнопку \"в корзину\". Для уменьшения количества блюд, нажать кнопку минус или вписать новое значение в поле ввода.\n        </p>\n        img\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"drinkCh\">Выбор напитков</h1>\n        <p class=\"reference_text\">Для выбора напитков пролистайте страницу выбранного ресторана до раздела напитки. В данном разделе вы можете посмотреть названия, описания, объем, цену и цену за бутылку напитков. В будущей версии будут добавлены изображения напитков.\n          По нажатию на кнопку категорий напитков вам будут представлены напитки только выбранной категории.\n          Для добавления напитка в корзину необходимо указать количество напитков нажав на кнопку + или вписать его вручную в поле ввода и нажать кнопку \"в корзину\". Для уменьшения количества напитков, нажать кнопку минус или вписать новое значение в поле ввода.\n        </p>\n        img\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"basket\">Корзина с заказами</h1>\n        <p class=\"reference_text\">\n          Для того, чтобы оформить заказ, вам необходимо нажать кнопку корзина на верхней панели сайта.\n          В открывшемся окне, вы увидете все блюда и напитки, которые вы добавили в корзину.\n          На этой вкладке вы сможете удалить блюдо или напиток, который вы решите не заказывать.\n          По нажатию на кнопку оформить, откроется вкладка с оформлением заказа.\n        </p>\n        img\n      </div>\n\n      <div class=\"reference-explanation\">\n        <h1 class=\"exp-title\" id=\"checkout\">Оформление заказа</h1>\n        <p class=\"reference_text\">\n          Для оформления заказа вам сначала нужно выбрать, будет ли это заказ в ресторане или на доставку.\n          1\n        </p>\n        img\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from \"@angular/router\";\nimport {Restaurant} from \"../entity/Restaurant\";\nimport {RestaurantsService} from \"../services/restaurants.service\";\nimport {MenuService} from \"../services/menu.service\";\nimport {Dish} from \"../entity/Dish\";\nimport {Drink} from \"../entity/Drink\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {OrdersService} from \"../services/orders.service\";\n\n@Component({\n  selector: 'app-restaurant',\n  templateUrl: './restaurant.component.html',\n  styleUrls: ['./restaurant.component.scss']\n})\nexport class RestaurantComponent implements OnInit {\n\n  restaurantId: number\n  restaurant: any = new Restaurant()\n  dishesCategories: string[] = []\n  drinksCategories: string[] = []\n  currentDishes: Dish[] = []\n  sortedDishes: Dish[] = []\n  currentDrinks: Drink[] = []\n  sortedDrinks: Drink[] = []\n  amount: number[] = []\n  empty: boolean = false\n  editToggle: boolean = false\n  role: string = ''\n  dishForm: any\n  drinkForm: any\n  addDishToggle: boolean = false\n  addDrinkToggle: boolean = false\n  makeOrder: boolean = false\n  dishesBasket: Dish[] = []\n  drinksBasket: Drink[] = []\n\n  constructor(\n    private route: ActivatedRoute,\n    public restaurantsService: RestaurantsService,\n    public menuService: MenuService,\n    private cookieService: CookieService,\n    private ordersService: OrdersService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    if (this.cookieService.get('dishes')) {\n      this.dishesBasket = JSON.parse(this.cookieService.get('dishes'))\n    }\n    if (this.cookieService.get('drinks')) {\n      this.drinksBasket = JSON.parse(this.cookieService.get('drinks'))\n    }\n\n    this.role = this.cookieService.get('role')\n    this.route.params.subscribe({\n      next: (params: Params) => {\n        this.restaurantId = +params['id']\n        this.restaurant = this.restaurantsService.getById(this.restaurantId)\n        this.currentDishes = this.menuService.dishes\n        this.currentDrinks = this.menuService.drinks\n        for (let i = 0; i < this.currentDishes.length; i++) {\n          this.currentDishes[i] = {...this.currentDishes[i], ...{amount: 0}}\n        }\n        for (let i = 0; i < this.currentDrinks.length; i++) {\n          this.currentDrinks[i] = {...this.currentDrinks[i], ...{amount: 0}}\n        }\n        this.sortedDishes = this.currentDishes\n        this.sortedDrinks = this.currentDrinks\n        this.dishesCategories.push(this.currentDishes[0]?.category)\n        this.drinksCategories.push(this.currentDrinks[0]?.category)\n        this.amount.length = this.currentDishes.length + this.currentDrinks.length\n        this.amount.fill(0)\n        this.restaurantsService.getRestaurant(this.restaurantId).subscribe({\n          next: (msg) => {\n            console.log(JSON.parse(String(msg.body)))\n            // this.restaurant = JSON.parse(String(msg.body))\n            // this.currentDishes = this.restaurant.menu.dishes\n            // this.currentDrinks = this.restaurant.menu.drinks\n            // for (let i = 0; i < this.currentDishes.length; i++) {\n            //   this.currentDishes[i] = {...this.currentDishes[i], ...{amount: 0}}\n            // }\n            // for (let i = 0; i < this.currentDrinks.length; i++) {\n            //   this.currentDrinks[i] = {...this.currentDrinks[i], ...{amount: 0}}\n            // }\n            // this.sortedDishes = this.currentDishes\n            // this.sortedDrinks = this.currentDrinks\n            // this.dishesCategories.push(this.currentDishes[0]?.category)\n            // this.drinksCategories.push(this.currentDrinks[0]?.category)\n            // this.amount.length = this.currentDishes.length + this.currentDrinks.length\n            // this.amount.fill(0)\n          },\n          error: (err) => {\n            console.log('error', err)\n          },\n          complete: () => {}\n        })\n      },\n      error: (err) => {\n        console.log('error received:', err)\n      }\n    })\n    this.dishForm = this.fb.group({\n        name: ['', Validators.required],\n        category: ['', Validators.required],\n        description: ['', Validators.required],\n        price: ['', Validators.required],\n        weight: ['', Validators.required],\n        calories: ['', Validators.required],\n        menu: [null]\n    })\n    this.drinkForm = this.fb.group({\n        name: ['', Validators.required],\n        category: ['', Validators.required],\n        description: ['', Validators.required],\n        price: ['', Validators.required],\n        priceOfBottle: ['', Validators.required],\n        volume: ['', Validators.required],\n        menu: [null]\n    })\n    window.scrollTo(0,0)\n  }\n\n  // ngAfterViewInit() {\n  //   window.addEventListener(\"scroll\", this.onWindowScroll, true)\n  // }\n\n  // @HostListener(\"window:scroll\", ['$event'])\n  // onWindowScroll() {\n  //   console.log(window.scrollY)\n  // }\n\n  getSortedDishes() {\n    // console.log(this.sortedDishes[0].amount)\n    return this.sortedDishes\n  }\n  getSortedDrinks() {\n    return this.sortedDrinks\n  }\n\n  dishCategories() {\n    this.currentDishes.map(category => {\n      if(!this.dishesCategories.includes(category.category))\n        this.dishesCategories.push(category.category)\n    })\n    return this.dishesCategories\n  }\n  drinkCategories() {\n    this.currentDrinks.map(category => {\n      if(!this.drinksCategories.includes(category.category))\n        this.drinksCategories.push(category.category)\n    })\n    return this.drinksCategories\n  }\n\n  sortDishes(cat: string) {\n    this.sortedDishes = this.currentDishes.filter((category, index) => category.category === cat)\n  }\n  sortDrinks(cat: string) {\n    this.sortedDrinks = this.currentDrinks.filter((category, index) => category.category === cat)\n  }\n\n  incValDish(i: number) {\n    this.sortedDishes[i].amount++\n  }\n  incValDrink(i: number) {\n    this.sortedDrinks[i].amount++\n  }\n\n  decValDish(i: number) {\n    this.sortedDishes[i].amount--\n  }\n  decValDrink(i: number) {\n    this.sortedDrinks[i].amount--\n  }\n\n  getRestaurant(id: number) {\n    this.restaurantsService.getRestaurant(id).subscribe({\n      next: (msg) => {\n        console.log(msg)\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n  }\n\n  getMenus() {\n    this.restaurantsService.getMenus().subscribe({\n      next: (msg) => {\n        console.log(msg)\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n  }\n\n  addToDishBasket(dish: any) {\n    if (dish != null) {\n      let withoutAmount = {...dish}\n      Object.keys(withoutAmount).forEach((key: any) => {\n        if (key == 'amount')\n          delete withoutAmount[key]\n        if (key == 'description')\n          delete withoutAmount[key]\n        if (key == 'weight')\n          delete withoutAmount[key]\n      })\n      for (let i = 0; i < dish.amount; i++) {\n        this.dishesBasket.push(withoutAmount)\n      }\n      this.cookieService.set('dishes', JSON.stringify(this.dishesBasket))\n      setTimeout(() => {\n        window.location.reload()\n      }, 300)\n    }\n  }\n  addToDrinkBasket(drink: any) {\n    if (drink != null) {\n      let withoutAmount = {...drink}\n      Object.keys(withoutAmount).forEach((key: any) => {\n        if (key == 'amount')\n          delete withoutAmount[key]\n        if (key == 'description')\n          delete withoutAmount[key]\n      })\n      for (let i = 0; i < drink.amount; i++) {\n        this.drinksBasket.push(withoutAmount)\n      }\n      this.cookieService.set('drinks', JSON.stringify(this.drinksBasket))\n      setTimeout(() => {\n        window.location.reload()\n      }, 300)\n    }\n  }\n\n  submit() {\n    if (this.dishForm.valid) {\n      const newDish = {...this.dishForm.value}\n      this.restaurantsService.addDish(this.restaurantId, newDish).subscribe({\n        next: (msg) => {\n          console.log(msg)\n        },\n        error: (err) => {\n          console.log('error', err)\n        },\n         complete: () => {\n           setTimeout(() => {\n             window.location.reload()\n           }, 10)\n         }\n      })\n    }\n    if (this.drinkForm.valid) {\n      console.log('here')\n      const newDrink = {...this.drinkForm.value}\n      this.restaurantsService.addDrink(this.restaurantId, newDrink).subscribe({\n        next: (msg) => {\n          console.log(msg)\n        },\n        error: (err) => {\n          console.log('error', err)\n        },\n        complete: () => {\n          setTimeout(() => {\n            window.location.reload()\n          }, 10)\n        }\n      })\n    }\n    // if (this.makeOrder) {\n    //\n    //   this.ordersService.addOrder()\n    // }\n  }\n\n  addDrnk() {\n    const newDrink = {...this.drinkForm.value}\n    this.restaurantsService.addDrink(this.restaurantId, newDrink).subscribe({\n      next: (msg) => {\n        console.log(msg)\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {\n        setTimeout(() => {\n          window.location.reload()\n        }, 10)\n      }\n    })\n  }\n\n  showInfo() {\n    this.cookieService.delete('dishes')\n    this.cookieService.delete('drinks')\n  }\n}\n","<!--<div class=\"wrapper\">-->\n  <div class=\"restaurant__container\">\n    <div class=\"restaurant__info\">\n      <section class=\"intro\" [style]=\"{'background-image': 'url(' + restaurant.wallpaperURL +')'}\">\n        <div class=\"wrapper\">\n          <div class=\"intro-background\">\n            <div class=\"label-input-flex\" *ngIf=\"editToggle\">\n              <label class=\"edit__label\">Изображение</label>\n              <input type=\"text\" class=\"edit__input edit-wallpaperURL\" placeholder=\"Изображение\" [value]=\"restaurant.wallpaperURL\">\n            </div>\n            <div class=\"title-with-btn-edit\">\n              <h1 class=\"intro__title\" *ngIf=\"!editToggle\">\n                {{restaurant.restaurantName}}\n              </h1>\n              <input type=\"text\" class=\"edit__input edit-title\"placeholder=\"Название\" [value]=\"restaurant.restaurantName\" *ngIf=\"editToggle\">\n              <button type=\"button\" class=\"btn btn-edit\" *ngIf=\"role == 'admin'\" (click)=\"editToggle = !editToggle\">\n                <small *ngIf=\"!editToggle\">Редактировать информацию</small>\n                <small *ngIf=\"editToggle\">Отменить</small>\n              </button>\n<!--              <button type=\"button\" class=\"btn btn-edit\" *ngIf=\"role == 'admin'\" (click)=\"showInfo()\">показать</button>-->\n            </div>\n            <p class=\"intro__subtitle\" *ngIf=\"!editToggle\">\n              {{restaurant.description}}\n            </p>\n            <input type=\"text\" class=\"edit__input\" placeholder=\"Описание\" [value]=\"restaurant.description\" *ngIf=\"editToggle\">\n          </div>\n        </div>\n      </section>\n\n      <div *ngIf=\"currentDishes.length != 0 || currentDrinks.length != 0; else inDev\">\n        <section class=\"menus\">\n          <div class=\"restaurants__wrap\">\n            <h2 class=\"restaurants__title\">\n              Добро пожаловать в ресторан {{restaurant.restaurantName}}\n            </h2>\n            <div class=\"restaurant__menu\">\n              <h1 class=\"menu__title\">Меню блюд</h1>\n<!--              <button class=\"btn\" (click)=\"sortedDishes = currentDishes\">SHOW ALL</button>-->\n              <div class=\"menu__categories-container\">\n                <button type=\"button\" class=\"btn\" *ngFor=\"let dishCategory of dishCategories()\" (click)=\"sortDishes(dishCategory)\">{{dishCategory}}</button>\n              </div>\n              <div class=\"menu__dish-drink-cards\">\n                <div class=\"menu__dish-drink-card\" *ngIf=\"!editToggle\">\n                  <ul class=\"menu__dish-drink-list\"  *ngFor=\"let dish of sortedDishes; let i = index\">\n<!--                    style=\"background: url('https://recept-borscha.ru/wp-content/uploads/e/5/5/e553c4afca5f1895f309de671a2167fb.jpeg') no-repeat center ; background-size: cover;\"-->\n                    <li class=\"with-back item-title\">{{dish.name}}</li>\n                    <li class=\"with-back item-title\">{{dish.category}}</li>\n                    <li class=\"with-back item-title\">{{dish.description}}</li>\n                    <li class=\"with-back \"><b>Цена: </b>{{dish.price}}</li>\n                    <li class=\"with-back \"><b>Вес: </b>{{dish.weight}}</li>\n                    <li class=\"with-back last-item\"><b>Калории: </b>{{dish.calories}}</li>\n                    <li class=\"with-back inc-dec__item\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" [disabled]=\"getSortedDishes()[i].amount == 0\" (click)=\"decValDish(i)\">-</button>\n                      <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDishes[i].amount\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" (click)=\"incValDish(i)\">+</button>\n                    </li>\n                    <li><button type=\"button\" class=\"btn btn-to-basket\" (click)=\"addToDishBasket(dish)\">В корзину</button></li>\n                  </ul>\n                </div>\n                <div class=\"menu__dish-drink-card\" *ngIf=\"editToggle\">\n                  <ul class=\"menu__dish-drink-list\" *ngFor=\"let dish of getSortedDishes(); let i = index\">\n                    <li class=\"item-title\"><input type=\"text\" class=\"edit__input\" placeholder=\"Название\" [value]=\"dish.name\"></li>\n                    <li class=\"item-title\"><input type=\"text\" class=\"edit__input\" placeholder=\"Описание\" [value]=\"dish.description\"></li>\n                    <li><b>Цена: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Цена\" [value]=\"dish.price\"></li>\n                    <li><b>Вес: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Вес\" [value]=\"dish.weight\"></li>\n                    <li class=\"last-item\"><b>Калории: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Калории\" [value]=\"dish.calories\"></li>\n                    <li class=\"inc-dec__item\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" [disabled]=\"getSortedDishes()[i].amount == 0\" (click)=\"decValDish(i)\">-</button>\n                      <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDishes[i].amount\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" (click)=\"incValDish(i)\">+</button>\n                    </li>\n                    <li><button type=\"button\" class=\"btn btn-to-basket\" (click)=\"addToDishBasket(dish)\">В корзину</button></li>\n                  </ul>\n                </div>\n              </div>\n              <button class=\"btn\" *ngIf=\"role == 'admin'\" (click)=\"addDishToggle = !addDishToggle\" style=\"margin-top: 20px\">\n                <small *ngIf=\"!addDishToggle\">Добавить блюдо</small>\n                <small *ngIf=\"addDishToggle\">Отменить</small>\n              </button>\n\n              <div class=\"add-dish-drink-field\" *ngIf=\"addDishToggle\">\n                <div class=\"new-dish-drink-flex-inputs\" [formGroup]=\"dishForm\">\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Название\" formControlName=\"name\">\n                    <div\n                      *ngIf=\"dishForm.get('name')?.invalid && dishForm.get('name')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Категория блюда\" formControlName=\"category\">\n                    <div\n                      *ngIf=\"dishForm.get('category')?.invalid && dishForm.get('category')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Описание блюда\" formControlName=\"description\">\n                    <div\n                      *ngIf=\"dishForm.get('description')?.invalid && dishForm.get('description')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Цена\" formControlName=\"price\">\n                    <div\n                      *ngIf=\"dishForm.get('price')?.invalid && dishForm.get('price')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Вес\" formControlName=\"weight\">\n                    <div\n                      *ngIf=\"dishForm.get('weight')?.invalid && dishForm.get('weight')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input type=\"text\" class=\"create__input\" placeholder=\"Калорийность\" formControlName=\"calories\">\n                    <div\n                      *ngIf=\"dishForm.get('calories')?.invalid && dishForm.get('calories')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n\n                  <button type=\"submit\" class=\"btn btn-add\" (click)=\"submit()\" [disabled]=\"dishForm.invalid\">Добавить</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section class=\"menus\">\n          <div class=\"restaurants__wrap\" style=\"\n          border-top-left-radius: 10px;\n          border-top-right-radius: 10px;\">\n            <div class=\"restaurant__menu\">\n              <h1 class=\"menu__title\" style=\"margin-top: 40px\">Меню напитков</h1>\n              <div class=\"menu__categories-container\">\n                <button type=\"button\" class=\"btn\" *ngFor=\"let drinkCategory of drinkCategories()\" (click)=\"sortDrinks(drinkCategory)\">{{drinkCategory}}</button>\n              </div>\n              <div class=\"menu__dish-drink-cards\">\n                <div class=\"menu__dish-drink-card\" *ngIf=\"!editToggle\">\n                  <ul class=\"menu__dish-drink-list\"  *ngFor=\"let drink of sortedDrinks; let j = index\">\n<!--                    style=\"background: url('https://recept-borscha.ru/wp-content/uploads/e/5/5/e553c4afca5f1895f309de671a2167fb.jpeg') no-repeat center ; background-size: cover;\"-->\n                    <li class=\"with-back item-title\">{{drink.name}}</li>\n                    <li class=\"with-back\">{{drink.category}}</li>\n                    <li class=\"with-back\"><b>Описание: </b>{{drink.description}}</li>\n                    <li class=\"with-back\"><b>Цена: </b>{{drink.price}}</li>\n                    <li class=\"with-back\"><b>Объем: </b>{{drink.volume}}</li>\n                    <li class=\"with-back last-item\"><b>Цена за бутылку: </b>{{drink.priceOfBottle}}</li>\n                    <li class=\"with-back inc-dec__item\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" [disabled]=\"sortedDrinks[j].amount == 0\" (click)=\"decValDrink(j)\">-</button>\n                      <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDrinks[j].amount\">\n                      <button type=\"button\" class=\"btn btn-inc-dec\" (click)=\"incValDrink(j)\">+</button>\n                    </li>\n                    <li><button type=\"button\" class=\"btn btn-to-basket\" (click)=\"addToDrinkBasket(drink)\">В корзину</button></li>\n                  </ul>\n                </div>\n                <div class=\"menu__dish-drink-card\" *ngIf=\"editToggle\">\n                  <ul class=\"menu__dish-drink-list\" *ngFor=\"let drink of sortedDrinks; let j = index\">\n                    <li class=\"item-title\"><input type=\"text\" class=\"edit__input\" placeholder=\"Название\" [value]=\"drink.name\"></li>\n                    <li><b>Описание: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Описание\" [value]=\"drink.description\"></li>\n                    <li><b>Цена: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Цена\" [value]=\"drink.price\"></li>\n                    <li><b>Объем: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Объем\" [value]=\"drink.volume\"></li>\n                    <li class=\"last-item\"><b>Цена за бутылку: </b><input type=\"text\" class=\"edit__input\" placeholder=\"Цена за бутылку\" [value]=\"drink.priceOfBottle\"></li>\n                    <li class=\"inc-dec__item\">\n                      <button class=\"btn btn-inc-dec\" type=\"button\" [disabled]=\"sortedDrinks[j].amount == 0\" (click)=\"decValDrink(j)\">-</button>\n                      <input class=\"input-to-basket\" type=\"text\" [(ngModel)]=\"sortedDrinks[j].amount\">\n                      <button class=\"btn btn-inc-dec\" type=\"button\" (click)=\"incValDrink(j)\">+</button>\n                    </li>\n                    <li><button class=\"btn btn-to-basket\" (click)=\"addToDrinkBasket(drink)\">В корзину</button></li>\n                  </ul>\n                </div>\n              </div>\n              <button class=\"btn\" *ngIf=\"role == 'admin'\" (click)=\"addDrinkToggle = !addDrinkToggle\" style=\"margin-top: 20px\">\n                <small *ngIf=\"!addDrinkToggle\">Добавить напиток</small>\n                <small *ngIf=\"addDrinkToggle\">Отменить</small>\n              </button>\n              <div class=\"add-dish-drink-field\" *ngIf=\"addDrinkToggle\">\n                <div class=\"new-dish-drink-flex-inputs\" [formGroup]=\"drinkForm\">\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"name\" placeholder=\"Название напитка\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('name')?.invalid && dishForm.get('name')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"category\" placeholder=\"Категория напитка\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('category')?.invalid && dishForm.get('category')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"description\" placeholder=\"Описание напитка\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('description')?.invalid && dishForm.get('description')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"price\" placeholder=\"Цена напитка\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('price')?.invalid && dishForm.get('price')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"volume\" placeholder=\"Объем\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('volume')?.invalid && dishForm.get('volume')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <div class=\"create__form-control\">\n                    <input formControlName=\"priceOfBottle\" placeholder=\"Цена бутылки\" class=\"create__input\">\n                    <div\n                      *ngIf=\"dishForm.get('priceOfBottle')?.invalid && dishForm.get('priceOfBottle')?.touched\"\n                      class=\"validation\"\n                    >\n                      <small>Заполните поле</small>\n                    </div>\n                  </div>\n                  <button class=\"btn\" type=\"submit\" (click)=\"addDrnk()\" [disabled]=\"drinkForm.invalid\">Добавить</button>\n\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <ng-template #inDev>\n        <section class=\"menus\">\n          <div class=\"restaurants__wrap\">\n            <h2 class=\"restaurants__title\">\n              Добро пожаловать в ресторан {{restaurant.restaurantName}}\n            </h2>\n            <div class=\"restaurant__menu\">\n              <h1 class=\"menu__title\">В разработке</h1>\n            </div>\n          </div>\n        </section>\n      </ng-template>\n\n\n    </div>\n  </div>\n<!--</div>-->\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport {Restaurant} from \"../entity/Restaurant\";\nimport {RestaurantsService} from \"../services/restaurants.service\";\nimport {CookieService} from \"ngx-cookie-service\";\n\n@Component({\n  selector: 'app-restaurants',\n  templateUrl: './restaurants.component.html',\n  styleUrls: ['./restaurants.component.scss']\n})\nexport class RestaurantsComponent implements OnInit {\n\n  role: string = ''\n  restaurants: Restaurant[] = []\n\n  constructor(\n    public restaurantsService: RestaurantsService,\n    private cookieService: CookieService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.role = this.cookieService.get('role')\n    this.restaurants = this.restaurantsService.restaurants\n    this.restaurantsService.getRestaurants().subscribe({\n      next: (msg) => {\n        console.log(msg.body)\n        // this.restaurants = JSON.parse(String(msg.body))\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n  }\n\n  getRestaurants() {\n    return this.restaurants\n  }\n\n  showCon() {\n    this.restaurantsService.getRestaurants().subscribe({\n      next: (msg) => {\n        console.log(msg)\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"restaurants__container\">\n      <button class=\"btn\" style=\"display: inline-block; margin: 0 20px 30px 0;\" [routerLink]=\"['/createrestaurant']\" *ngIf=\"role == 'admin'\">Создать ресторан</button>\n      <button class=\"btn\" style=\"display: inline-block; margin: 0 20px 30px 0;\" *ngIf=\"role == 'admin'\" (click)=\"showCon()\">Получить</button>\n      <div class=\"restaurants__cards\">\n        <a class=\"restaurants__card-link\" *ngFor=\"let restaurant of getRestaurants()\"><div class=\"restaurants__card\"  [routerLink]=\"['/restaurants/', restaurant.id]\" [ngStyle]=\"{'background-image': 'url(' + restaurant.wallpaperURL +')'}\">\n          <h1 class=\"card__header\">{{restaurant.restaurantName}}</h1>\n        </div></a>\n      </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Router} from \"@angular/router\";\nimport {AuthTokens} from \"../entity/AuthTokens\";\nimport {CookieService} from \"ngx-cookie-service\";\n\nconst API_URL: string = 'http://localhost:8080'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private authTokens: AuthTokens = new AuthTokens()\n  private isAuth = false\n  username = ''\n  password = ''\n  private erStatus: number = 0;\n\n  constructor(private http: HttpClient,\n              private router: Router,\n              private cookieService: CookieService\n  ) {\n  }\n\n  // login(username: string) {\n  //   if (username != 'Admin' && username != 'Manager')\n  //     username = 'Client'\n  //   this.cookieService.set('name','Restaurant');\n  //   this.cookieService.set('isAuthenticated', 'OK')\n  //   this.cookieService.set('userName', 'Igor')\n  //   this.cookieService.set('role', username)\n  //   this.setAuth(true)\n  //   this.router.navigate(['/restaurants'])\n  //   setTimeout(() => {\n  //     window.location.reload()\n  //   }, 300)\n  //   return this.getIsAuth()\n  // }\n\n  login(username: any, password: string) {\n    const params = {\n      'username': username,\n      'password': password\n    }\n\n    console.log(params)\n\n    this.http.post(\n      API_URL + '/api/login', null, {\n        params: params,\n        responseType: 'text' as 'json',\n        observe: 'response'\n      }\n    ).subscribe({\n      next: (msg) => {\n        console.log(msg)\n        console.log(JSON.parse(String(msg.body)))\n        let role: string = JSON.parse(String(msg.body)).user.role.roleName\n\n        this.authTokens = {\n          access_token: JSON.parse(String(msg.body)).access_token,\n          refresh_token: JSON.parse(String(msg.body)).refresh_token\n        }\n\n        this.cookieService.set('name','restUser');\n        this.cookieService.set('access_token', JSON.parse(String(msg.body)).access_token, {expires: 1})\n        this.cookieService.set('refresh_token', JSON.parse(String(msg.body)).refresh_token, {expires: 1})\n        this.cookieService.set('isAuthenticated', msg.statusText)\n        this.cookieService.set('id', JSON.parse(String(msg.body)).user.id)\n        this.cookieService.set('surname', JSON.parse(String(msg.body)).user.surname)\n        this.cookieService.set('name', JSON.parse(String(msg.body)).user.name)\n        // this.cookieService.set('patronymic', JSON.parse(String(msg.body)).user.patronymic)\n        this.cookieService.set('telephone', this.username)\n        this.cookieService.set('role', role)\n        console.log('cookieservice: ', this.cookieService)\n        this.isAuth = (msg.statusText == 'OK')\n        return 'OK'\n      },\n      error: (err) => {\n        this.isAuth = false\n        console.log('error received:', err)\n        if (err.status == 403) {\n          this.erStatus = 403\n        }\n        else {\n          this.erStatus = 404\n        }\n      },\n      complete: () => {\n        this.router.navigate(['/restaurants'])\n        setTimeout(() => {\n          window.location.reload()\n        }, 10)\n      }\n    })\n  }\n\n  logout() {\n    this.cookieService.delete('dishes')\n    this.cookieService.delete('drinks')\n    setTimeout(() => {\n      this.cookieService.deleteAll('/')\n    }, 200)\n\n    this.isAuth = false\n    setTimeout(() => {\n      this.router.navigate(['/'])\n    }, 300)\n    setTimeout(() => {\n      window.location.reload()\n    }, 400)\n  }\n\n  isAuthenticated(): Promise<boolean> {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        resolve(this.isAuth)\n      }, 300)\n    })\n  }\n\n  getIsAuth () {\n    return this.isAuth\n  }\n  setAuth (status: boolean) {\n    this.isAuth = status\n  }\n\n  setAuthTokens(accessToken: string, refreshToken: string) {\n    this.authTokens = {\n      access_token:  accessToken,\n      refresh_token: refreshToken\n    }\n  }\n\n  getAuthTokens () {\n    return this.authTokens\n  }\n\n  getErrStatus() {\n    return this.erStatus\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Menu} from \"../entity/Menu\";\nimport {Dish} from \"../entity/Dish\";\nimport {Drink} from \"../entity/Drink\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MenuService {\n  dishes: any[] = [\n    {id: 1, name: 'Русская закуска', category: 'Холодные закуски', price: 1000, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 2, name: 'Горячая закуска', category: 'Горячие закуски', price: 1200, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 3, name: 'Русский салат', category: 'Салаты', price: 500, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 4, name: 'Рис с овощами', category: 'Горячие блюда', price: 700, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 5, name: 'Борщ', category: 'Супы', price: 900, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 6, name: 'Жареная картошка', category: 'Гарниры', price: 2000, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 7, name: 'Русский хлеб', category: 'Хлеб и выпечка', price: 2500, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 8, name: 'Русский соус', category: 'Соусы', price: 100, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 9, name: 'Русский десерт', category: 'Десерты', price: 200, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 10, name: 'Язь', category: 'Горячие блюда', price: 3200, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 11, name: 'Жаркое', category: 'Супы', price: 1700, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 1},\n    {id: 12, name: 'Бургер', category: 'Горячие блюда', price: 2500, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 2},\n    {id: 13, name: 'Стейк', category: 'Горячие блюда', price: 4700, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 2},\n    {id: 14, name: 'Картошка фри', category: 'Гарниры', price: 2100, description: 'somedesc', weight: 200, calories: 500, amount: 0, menu_id: 2},\n  ]\n  drinks: any[] = [\n    {id: 1, category: 'Безалкогольные коктейли', description: 'desc', name: 'Русский коктейль', price: 1479, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 2, category: 'Алкогольные коктейли', description: 'desc', name: 'Monkey47', price: 1200, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 3, category: 'Негазированные напитки', description: 'desc', name: 'Яблочный сок', price: 400, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 4, category: 'Газированные напитки', description: 'desc', name: 'Байкал', price: 200, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 5, category: 'Чай', description: 'desc', name: 'Зеленый чай', price: 149, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 6, category: 'Кофе', description: 'desc', name: 'Русиано', price: 219, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 1},\n    {id: 7, category: 'Кофе', description: 'desc', name: 'Американо', price: 240, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 2},\n    {id: 8, category: 'Газированные напитки', description: 'desc', name: 'Coca-cola', price: 120, priceOfBottle: 8000, volume: 500, amount: 0, menu_id: 2},\n  ]\n\n  constructor() { }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Order} from \"../entity/Order\";\nimport {OrderHall} from \"../entity/OrderHall\";\nimport {Restaurant} from \"../entity/Restaurant\";\nimport {User} from \"../entity/User\";\nimport {TableInRestaurant} from \"../entity/TableInRestaurant\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthTokens} from \"../entity/AuthTokens\";\nimport {CookieService} from \"ngx-cookie-service\";\n\nconst API_URL: string = 'http://localhost:8080'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  authTokens: AuthTokens = {\n    access_token: this.cookieService.get('access_token'),\n    refresh_token: this.cookieService.get('refresh_token')\n  }\n\n  orders: Order[] = [\n    {id: 0, restaurant: 'Русская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 2, isDone: 'Готовится', dishes: '', drinks: ''},\n    {id: 1, restaurant: 'Грузинская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 4, isDone: 'Доставляется', dishes: '', drinks: ''},\n    {id: 2, restaurant: 'Японская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 7, isDone: 'Доставлен', dishes: '', drinks: ''},\n    {id: 3, restaurant: 'Китайская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 8, isDone: 'Обрабатывается', dishes: '', drinks: ''},\n  ]\n  ordersHall: Order[] = [\n    {id: 0, restaurant: 'Русская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 2, isDone: 'Готовится', dishes: '', drinks: ''},\n    {id: 1, restaurant: 'Грузинская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 4, isDone: 'Принят', dishes: '', drinks: ''},\n    {id: 2, restaurant: 'Японская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 7, isDone: 'Обрабатывается', dishes: '', drinks: ''},\n    {id: 3, restaurant: 'Китайская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 8, isDone: 'Готов', dishes: '', drinks: ''},\n  ]\n  ordersCourierActive: any[] = [\n    {id: 0, restaurant: 'Русская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 2, isDone: 'Готовится', address: 'Моссковское шоссе, 34Б, 109', price: '12390'},\n    {id: 1, restaurant: 'Грузинская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 4, isDone: 'Доставляется', address: 'Ново-садовая, 105, 23', price: '10540'},\n    {id: 2, restaurant: 'Японская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 7, isDone: 'Доставляется', address: 'Гагарина, 48, 34', price: '5890'},\n    {id: 3, restaurant: 'Китайская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 8, isDone: 'Доставляется', address: 'Севастопольская, 37, 15', price: '21190'},\n  ]\n  ordersCourierDone: any[] = [\n    {id: 0, restaurant: 'Русская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 2, isDone: 'Доставлен', address: 'Ставропольская, 12, 19', price: '4990'},\n    {id: 1, restaurant: 'Грузинская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 4, isDone: 'Отменен', address: 'Кирова, 15, 33', price: '7650'},\n    {id: 2, restaurant: 'Японская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 7, isDone: 'Доставлен', address: 'Металистов, 47, 3', price: '6520'},\n    {id: 3, restaurant: 'Китайская кухня', user: new User(), needDelivery: false, orderedTime: new Date(), seatNumber: 8, isDone: 'Доставлен', address: 'Севастопольская, 28, 10', price: '1090'},\n  ]\n\n\n  constructor(\n    private cookieService: CookieService,\n    private http: HttpClient\n  ) {\n  }\n\n  padTo2Digits(num: number) {\n    return num.toString().padStart(2, '0');\n  }\n\n  addOrder(order: Order) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.post(API_URL + '/test/addOrder', JSON.stringify(order), {headers: headers})\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Payment} from \"../entity/Payment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaymentsService {\n  payment: Payment[] = [\n    {id: 0, date: String(new Date()), isDone: false, price: 12000},\n    {id: 1, date: String(new Date()), isDone: false, price: 12000},\n    {id: 2, date: String(new Date()), isDone: false, price: 12000},\n    {id: 3, date: String(new Date()), isDone: false, price: 12000},\n  ]\n\n  constructor() { }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {Restaurant} from \"../entity/Restaurant\";\nimport {Menu} from \"../entity/Menu\";\nimport {TableInRestaurant} from \"../entity/TableInRestaurant\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthTokens} from \"../entity/AuthTokens\";\nimport {CookieService} from \"ngx-cookie-service\";\nimport {Drink} from \"../entity/Drink\";\nimport {Dish} from \"../entity/Dish\";\n\nconst API_URL: string = 'http://localhost:8080'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantsService {\n\n  authTokens: AuthTokens = {\n    access_token: this.cookieService.get('access_token'),\n    refresh_token: this.cookieService.get('refresh_token')\n  }\n\n  restaurants: Restaurant[] = [\n    {id: 1, restaurantName: 'Русская кухня', description: 'Русская кухня – одна из самых интересных национальных кухонь в мире. Она привлекает многих своим необычайным национальным колоритом. Такие блюда, как щи, каши, пироги, блины, а также квас, сбитень, считаются исконно русскими. Русская кухня является очень сытной и в то же время очень здоровой.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/RC.png', wallpaperURL: '../../assets/images/russian-rest.jpeg'},\n    {id: 2, restaurantName: 'Американская кухня', description: 'Американская кухня богата разнообразием. К наиболее распространенным блюдам можно отнести различные супы-пюре, например, из тыквы, кукурузы или морепродуктов, барбекю и стейки, банановый хлеб, тыквенный пирог, традиционная индейка, корн-доги, сэндвичи и гамбургеры. Из выпечки всем известны брауни, маффины, чизкейки, пончики.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/AC.png', wallpaperURL: '../../assets/images/american-rest.jpeg'},\n    {id: 3, restaurantName: 'Грузинская кухня', description: 'В Грузии большинство основных блюд делают из баранины, свинины, индейки и курицы. При их приготовлении используют пряности и зелень. Часто еду подают вместе с острыми и кислыми соусами. Овощи чаще выступают гарниром. Важной частью рациона выступают лепешки, хлеб, пироги, запеканки, изготовленные из пшеничной и кукурузной муки, а также чумизы.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/GC.png', wallpaperURL: '../../assets/images/georgian-rest.jpeg'},\n    {id: 4, restaurantName: 'Итальянская кухня', description: 'Итальянская кухня характеризуется, в первую очередь, обилием свежих продуктов средиземноморского региона. Традиционные блюда итальянской кухни пользуются популярностью во всех странах мира. Итальянская кухня – это паста и соусы, это пицца и оливки, это сыр и вино, а самым популярным безалкогольным напитком в Италии является кофе.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/IC.png', wallpaperURL: '../../assets/images/italian-rest.jpeg'},\n    {id: 5, restaurantName: 'Японская кухня', description: 'Японская кухня отличается предпочтением натуральных, минимально обработанных продуктов, широким применением морепродуктов, сезонностью, характерными блюдами, специфическими правилами оформления блюд, сервировкой, застольным этикетом.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/JC.png', wallpaperURL: '../../assets/images/japan-rest.jpg'},\n    {id: 6, restaurantName: 'Китайская кухня', description: 'Отличительная особенность китайской кухни – сбалансированность продуктов. В китайской кухне принято использование пряных трав, которые часто обладают лечебными свойствами, а также очень популярен соевый соус. Наиболее известные блюда китайской кухни – утка по-пекински, димсам, жареный рис, столетнее яйцо, черепаховый суп.', menu: new Menu(), tables: '', staff: '', orders: '', latitude: 0, longitude: 0, kitchenSpeciality: '', address: '', icon: '../../assets/images/KC.png', wallpaperURL: '../../assets/images/chineese-rest.jpeg'},\n  ]\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  getById(id: number): Restaurant | undefined {\n    return this.restaurants.find(r => r.id === id)\n  }\n\n  addRestaurant(restaurant: Restaurant) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.post(API_URL + '/test/addRestaurant', JSON.stringify(restaurant), {headers: headers, responseType: 'text' as 'json', observe: 'response'})\n  }\n\n  getRestaurants() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.get(API_URL + '/test/restaurants', {headers: headers, responseType: 'text' as 'json', observe: 'response'});\n  }\n\n  getRestaurant(id: number) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n    let params = {\n      id: id\n    }\n    return this.http.get(API_URL + '/test/getRestaurant', {headers: headers, params: params, responseType: 'text' as 'json', observe: 'response'});\n  }\n\n  addMenu(id: number, menu: Menu) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n    let params = {\n      id: id\n    }\n    console.log(JSON.stringify(menu))\n    console.log(id)\n\n    return this.http.post(API_URL + '/test/addMenu', JSON.stringify(menu), {headers: headers, params: params, responseType: 'text' as 'json', observe: 'response'})\n  }\n\n  addDish(id: number, dish: Dish) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n    let params = {\n      id: id\n    }\n\n    return this.http.post(API_URL + '/test/addDish', JSON.stringify(dish), {headers: headers, params: params, responseType: 'text' as 'json', observe: 'response'})\n  }\n\n  addDrink(id: number, drink: Drink) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n    let params = {\n      id: id\n    }\n\n    return this.http.post(API_URL + '/test/addDrink', JSON.stringify(drink), {headers: headers, params: params, responseType: 'text' as 'json', observe: 'response'})\n  }\n\n  getMenus() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.get(API_URL + '/test/menus', {headers: headers, responseType: 'text' as 'json', observe: 'response'});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {User} from \"../entity/User\";\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {AuthTokens} from \"../entity/AuthTokens\";\nimport {CookieService} from \"ngx-cookie-service\";\n\nconst API_URL: string = 'http://localhost:8080'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  authTokens: AuthTokens = {\n    access_token: this.cookieService.get('access_token'),\n    refresh_token: this.cookieService.get('refresh_token')\n  }\n\n  users: User[] = [\n    {id: 1, surname: 'Малинин', name: 'Игорь', telephone: 9608223422, address: 'Мой адрес, мой дом, моя квартира', myOrders: '', role: {id: 0, roleName: 'admin'}, password: 'vip16108', latitude: 0, longitude: 0, placeOfWork: '', working: false},\n    {id: 2, surname: 'Маратов', name: 'Серик', telephone: 9998983211, address: 'Мой адрес, мой дом, моя квартира', myOrders: '', role: {id: 0, roleName: 'courier'}, password: '12930123', latitude: 0, longitude: 0, placeOfWork: '', working: false},\n    {id: 3, surname: 'Геккель', name: 'Виктория', telephone: 9273331118, address: 'Мой адрес, мой дом, моя квартира', myOrders: '', role: {id: 0, roleName: 'manager'}, password: '13223344', latitude: 0, longitude: 0, placeOfWork: '', working: false},\n    {id: 4, surname: 'Тестов', name: 'Тест', telephone: 9094044030, address: 'Мой адрес, мой дом, моя квартира', myOrders: '', role: {id: 0, roleName: 'client'}, password: 'testtest', latitude: 0, longitude: 0, placeOfWork: '', working: false},\n  ]\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService\n  ) { }\n\n  deleteUser(id: number) {\n    // delete this.users[this.users.indexOf((this.users.filter(user => user.id == id))[0], 0)]\n    this.users = this.users.filter(user => user !== this.users.filter(user => user.id == id)[0]);\n    console.log(this.users)\n  }\n  addUser(user: User) {\n    this.users.push(user)\n  }\n\n  signupUserByAdmin(user: any) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n    console.log(this.authTokens.access_token)\n    console.log(JSON.stringify(user))\n    return this.http.post(API_URL + '/api/registration', JSON.stringify(user), {headers: headers, responseType: 'text' as 'json', observe: 'response'})\n  }\n\n  signupUser(user: User) {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n    //   'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.post(API_URL + '/test/registration', JSON.stringify(user), {headers: headers})\n  }\n\n  getRoles() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.get(API_URL + '/api/getRoles', {headers: headers, responseType: 'text' as 'json', observe: 'response'});\n  }\n\n  getUsers() {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + this.authTokens.access_token\n    })\n\n    return this.http.get(API_URL + '/test/users', {headers: headers, responseType: 'text' as 'json', observe: 'response'});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {RestaurantsService} from \"../services/restaurants.service\";\nimport {Router} from \"@angular/router\";\nimport {UsersService} from \"../services/users.service\";\nimport {AuthService} from \"../services/auth.service\";\nimport {User} from \"../entity/User\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  formUserReg: any\n  telephoneLength: number = 10\n  passLength: number = 10\n  newTokens: any\n  pass: string\n\n  constructor(\n    private http: HttpClient,\n    private usersService: UsersService,\n    private authService: AuthService,\n    private router: Router,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.formUserReg = this.fb.group({\n      id: [null],\n      surname: ['', Validators.required],\n      name: ['', Validators.required],\n      telephone: [null,[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      password: ['',[\n        Validators.required,\n        Validators.minLength(this.passLength-6),\n        Validators.maxLength(this.passLength)\n      ]],\n      address: ['', Validators.required],\n      myOrders: [null],\n      latitude: [null],\n      longitude: [null],\n      placeOfWork: [null],\n      role: [{id: null, roleName:'client'}],\n      // email: ['', [\n      //   Validators.required,\n      //   Validators.email\n      // ]],\n      working: [false],\n      passwordRepeat: ['', Validators.required]\n    }, {validator: this.matchValidator('password', 'passwordRepeat')})\n  }\n\n  matchValidator(passwordKey: string, passwordConfirmationKey: string) {\n    return (group: FormGroup) => {\n      let passwordInput = group.controls[passwordKey],\n        passwordConfirmationInput = group.controls[passwordConfirmationKey];\n      if (passwordInput.value !== passwordConfirmationInput.value) {\n        return passwordConfirmationInput.setErrors({mismatch: false})\n      }\n      else {\n        return passwordConfirmationInput.setErrors(null);\n      }\n    }\n  }\n\n  submit() {\n    if(this.formUserReg.valid) {\n      const newUserData = {...this.formUserReg.value}\n      let resultData = {...newUserData}\n      let registeredUser: any\n      Object.keys(resultData).forEach((key: any) => {\n        if (key == 'passwordRepeat')\n          delete resultData[key]\n      })\n      // console.log(JSON.stringify(resultData))\n      // console.log(resultData)\n      this.usersService.signupUser(resultData).subscribe({\n        next: (msg) => {\n          console.log(msg)\n          registeredUser = msg\n        },\n        error: (err) => {\n          console.log('error', err)\n        },\n        complete: () => {\n          this.authService.login(newUserData.telephone, newUserData.password)\n        }\n      })\n      console.log(registeredUser)\n      this.formUserReg.reset()\n    }\n  }\n  showCon() {\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"reg__client-form\">\n    <button class=\"btn btn-go-back\" type=\"button\" routerLink=\"/login\">Назад</button>\n    <form class=\"reg__form\" [formGroup]=\"formUserReg\" (ngSubmit)=\"submit()\">\n      <h1 class=\"reg__title\">Регистрация нового пользователя</h1>\n\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"surname\" class=\"reg__input\" placeholder=\"Фамилия\" formControlName=\"surname\">\n        <div\n          *ngIf=\"formUserReg.get('surname')?.invalid && formUserReg.get('surname')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"cName\" class=\"reg__input\" placeholder=\"Имя\" formControlName=\"name\">\n        <div\n          *ngIf=\"formUserReg.get('name')?.invalid && formUserReg.get('name')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"telephone\" class=\"reg__input\" placeholder=\"Телефон\" formControlName=\"telephone\">\n        <div\n          *ngIf=\"formUserReg.get('telephone')?.invalid && formUserReg.get('telephone')?.touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"formUserReg.get('telephone')?.errors?.['required']\">\n            Поле не может быть пустым\n          </small>\n          <small *ngIf=\"formUserReg.get('telephone')?.hasError('minlength')\">\n            Введите телефон длиной {{formUserReg.get('telephone')?.errors?.['minlength'].requiredLength}} символов.\n            Вы ввели {{formUserReg.get('telephone')?.errors?.['minlength'].actualLength}}.\n          </small>\n          <small *ngIf=\"formUserReg.get('telephone')?.hasError('maxlength')\">\n            Введите телефон длиной {{formUserReg.get('telephone')?.errors?.['maxlength'].requiredLength}} символов.\n            Вы ввели {{formUserReg.get('telephone')?.errors?.['maxlength'].actualLength}}.\n          </small>\n        </div>\n      </div>\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"address\" class=\"reg__input\" placeholder=\"Адрес\" formControlName=\"address\">\n        <div\n          *ngIf=\"formUserReg.get('address')?.invalid && formUserReg.get('address')?.touched\"\n          class=\"validation\"\n        >\n          <small>Поле не может быть пустым</small>\n        </div>\n      </div>\n<!--      <div class=\"reg__form-control\">-->\n<!--        <input type=\"text\" name=\"email\" class=\"reg__input\" placeholder=\"E-mail\" formControlName=\"email\">-->\n<!--        <div-->\n<!--          *ngIf=\"formUserReg.get('email')?.invalid && formUserReg.get('email')?.touched\"-->\n<!--          class=\"validation\"-->\n<!--        >-->\n<!--          <small *ngIf=\"formUserReg.get('email')?.errors?.['required']\">-->\n<!--            Поле не может быть пустым-->\n<!--          </small>-->\n<!--          <small *ngIf=\"formUserReg.get('email')?.errors?.['email']\">-->\n<!--            Введите корректный E-mail-->\n<!--          </small>-->\n<!--        </div>-->\n<!--      </div>-->\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"password\" class=\"reg__input\" placeholder=\"Пароль\" formControlName=\"password\">\n        <div\n          *ngIf=\"formUserReg.get('password')?.invalid && formUserReg.get('password')?.touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"formUserReg.get('password')?.errors?.['required']\">\n            Поле не может быть пустым\n          </small>\n          <small *ngIf=\"formUserReg.get('password')?.hasError('minlength')\">\n            Введите пароль длиной хотя бы {{formUserReg.get('password')?.errors?.['minlength'].requiredLength}} символа\n            Вы ввели {{formUserReg.get('password')?.errors?.['minlength'].actualLength}}\n          </small>\n          <small *ngIf=\"formUserReg.get('password')?.hasError('maxlength')\">\n            Введите пароль длиной не более {{formUserReg.get('password')?.errors?.['maxlength'].requiredLength}} символов\n            Вы ввели {{formUserReg.get('password')?.errors?.['maxlength'].actualLength}}\n          </small>\n        </div>\n      </div>\n      <div class=\"reg__form-control\">\n        <input type=\"text\" name=\"passwordRepeat\" class=\"reg__input\" placeholder=\"Повторите пароль\" formControlName=\"passwordRepeat\">\n        <div\n          *ngIf=\"formUserReg.get('passwordRepeat')?.invalid && formUserReg.get('passwordRepeat')?.touched\"\n          class=\"validation\"\n        >\n          <small *ngIf=\"formUserReg.get('passwordRepeat')?.value == ''\">\n            Поле не может быть пустым\n          </small>\n          <small *ngIf=\"!formUserReg.get('passwordRepeat')?.errors?.['mismatch']\">\n            Пароль не совпадает\n          </small>\n        </div>\n      </div>\n      <button class=\"btn reg__btn\" type=\"submit\" [disabled]=\"formUserReg.invalid\">Зарегистрировать</button>\n<!--      <button class=\"btn\" type=\"button\" (click)=\"showCon()\">show</button>-->\n\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UsersService} from \"../services/users.service\";\nimport {User} from \"../entity/User\";\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {Role} from \"../entity/Role\";\n\n@Component({\n  selector: 'app-userspage',\n  templateUrl: './userspage.component.html',\n  styleUrls: ['./userspage.component.scss']\n})\nexport class UserspageComponent implements OnInit {\n\n  users: User[] = []\n  regToggle: boolean = false;\n  formUserReg: any\n  telephoneLength: number = 10\n  passLength: number = 10\n\n  constructor(\n    private usersService: UsersService,\n    private fb: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    this.usersService.getUsers().subscribe({\n      next: (msg) => {\n        console.log(JSON.parse(String(msg.body)))\n        this.users = JSON.parse(String(msg.body))\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n    console.log(this.users)\n    this.formUserReg = this.fb.group({\n      id: [null],\n      surname: ['', Validators.required],\n      name: ['', Validators.required],\n      telephone: [null,[\n        Validators.required,\n        Validators.minLength(this.telephoneLength),\n        Validators.maxLength(this.telephoneLength)\n      ]],\n      password: ['',[\n        Validators.required,\n        Validators.minLength(this.passLength-6),\n        Validators.maxLength(this.passLength)\n      ]],\n      address: ['', Validators.required],\n      myOrders: [null],\n      latitude: [null],\n      longitude: [null],\n      placeOfWork: [null],\n      role: ['', Validators.required],\n      // email: ['', [\n      //   Validators.required,\n      //   Validators.email\n      // ]],\n      working: [false]\n    })\n  }\n\n  deleteUser(id: number) {\n    this.usersService.deleteUser(id)\n  }\n\n  submit() {\n    if(this.formUserReg.valid) {\n      const newUserData = {...this.formUserReg.value}\n      let role = {\n        role: {\n          id: null,\n          roleName: newUserData.role\n        }\n      }\n      let editedRole = {...newUserData}\n      Object.keys(editedRole).forEach((key: any) => {\n        if (key == 'role')\n          delete editedRole[key]\n      })\n      editedRole = {...editedRole, ...role}\n      this.usersService.signupUser(editedRole).subscribe({\n        next: (msg) => {\n          console.log(msg)\n        },\n        error: (err) => {\n          console.log('error', err)\n        },\n        complete: () => {\n          setTimeout(() => {\n            window.location.reload()\n          }, 10)\n        }\n      })\n      console.log(editedRole)\n      this.formUserReg.reset()\n    }\n  }\n\n  getSome() {\n    this.usersService.getUsers().subscribe({\n      next: (msg) => {\n        console.log(msg)\n      },\n      error: (err) => {\n        console.log('error', err)\n      },\n      complete: () => {}\n    })\n  }\n\n}\n","<div class=\"wrapper\">\n  <div class=\"paige__container\">\n    <div class=\"control-buttons\">\n      <button class=\"btn\" type=\"button\" (click)=\"regToggle = !regToggle\">\n        <small *ngIf=\"!regToggle\">Добавить пользователя</small>\n        <small *ngIf=\"regToggle\">Отменить</small>\n      </button>\n<!--      <button class=\"btn\" type=\"button\" (click)=\"getSome()\">показать</button>-->\n      <div class=\"search-elements\">\n        <input type=\"text\" class=\"search-field\">\n        <button class=\"btn\">Поиск</button>\n      </div>\n<!--      <button class=\"btn\">Изменить пользователя</button>-->\n<!--      <button class=\"btn\">Удалить пользователя</button>-->\n    </div>\n\n    <form class=\"reg__form\" [formGroup]=\"formUserReg\" (ngSubmit)=\"submit()\" *ngIf=\"regToggle\">\n      <div class=\"reg__form-flex\">\n        <div class=\"reg__form-control\">\n          <input type=\"text\" name=\"surname\" class=\"reg__input\" placeholder=\"Фамилия\" formControlName=\"surname\">\n          <div\n            *ngIf=\"formUserReg.get('surname')?.invalid && formUserReg.get('surname')?.touched\"\n            class=\"validation\"\n          >\n            <small>Поле не может быть пустым</small>\n          </div>\n        </div>\n        <div class=\"reg__form-control\">\n          <input type=\"text\" name=\"cName\" class=\"reg__input\" placeholder=\"Имя\" formControlName=\"name\">\n          <div\n            *ngIf=\"formUserReg.get('name')?.invalid && formUserReg.get('name')?.touched\"\n            class=\"validation\"\n          >\n            <small>Поле не может быть пустым</small>\n          </div>\n        </div>\n        <div class=\"reg__form-control\">\n          <input type=\"text\" name=\"telephone\" class=\"reg__input\" placeholder=\"Телефон\" formControlName=\"telephone\">\n          <div\n            *ngIf=\"formUserReg.get('telephone')?.invalid && formUserReg.get('telephone')?.touched\"\n            class=\"validation\"\n          >\n            <small *ngIf=\"formUserReg.get('telephone')?.errors?.['required']\">\n              Поле не может быть пустым\n            </small>\n            <small *ngIf=\"formUserReg.get('telephone')?.hasError('minlength')\">\n              Введите телефон длиной {{formUserReg.get('telephone')?.errors?.['minlength'].requiredLength}} символов.\n              Вы ввели {{formUserReg.get('telephone')?.errors?.['minlength'].actualLength}}.\n            </small>\n            <small *ngIf=\"formUserReg.get('telephone')?.hasError('maxlength')\">\n              Введите телефон длиной {{formUserReg.get('telephone')?.errors?.['maxlength'].requiredLength}} символов.\n              Вы ввели {{formUserReg.get('telephone')?.errors?.['maxlength'].actualLength}}.\n            </small>\n          </div>\n        </div>\n        <div class=\"reg__form-control\">\n          <input type=\"text\" name=\"address\" class=\"reg__input\" placeholder=\"Адрес\" formControlName=\"address\">\n          <div\n            *ngIf=\"formUserReg.get('address')?.invalid && formUserReg.get('address')?.touched\"\n            class=\"validation\"\n          >\n            <small>Поле не может быть пустым</small>\n          </div>\n        </div>\n        <div class=\"reg__form-control\">\n          <select class=\"role__select\" name=\"roles\" id=\"role-select\" formControlName=\"role\">\n            <option class=\"role__option\" value=\"\"> Выберите роль </option>\n            <option class=\"role__option\" value=\"admin\">Администратор</option>\n            <option class=\"role__option\" value=\"manager\">Менеджер</option>\n            <option class=\"role__option\" value=\"deliveryman\">Курьер</option>\n            <option class=\"role__option\" value=\"chef\">Шеф-повар</option>\n            <option class=\"role__option\" value=\"client\">Клиент</option>\n          </select>\n          <div\n            *ngIf=\"formUserReg.get('role')?.invalid && formUserReg.get('role')?.touched\"\n            class=\"validation\"\n          >\n            <small>Роль не назначена, выберите роль</small>\n          </div>\n        </div>\n<!--        <div class=\"reg__form-control\">-->\n<!--          <input type=\"text\" name=\"email\" class=\"reg__input\" placeholder=\"E-mail\" formControlName=\"email\">-->\n<!--          <div-->\n<!--            *ngIf=\"formUserReg.get('email')?.invalid && formUserReg.get('email')?.touched\"-->\n<!--            class=\"validation\"-->\n<!--          >-->\n<!--            <small *ngIf=\"formUserReg.get('email')?.errors?.['required']\">-->\n<!--              Поле не может быть пустым-->\n<!--            </small>-->\n<!--            <small *ngIf=\"formUserReg.get('email')?.errors?.['email']\">-->\n<!--              Введите корректный E-mail-->\n<!--            </small>-->\n<!--          </div>-->\n<!--        </div>-->\n        <div class=\"reg__form-control\">\n          <input type=\"text\" name=\"password\" class=\"reg__input\" placeholder=\"Пароль\" formControlName=\"password\">\n          <div\n            *ngIf=\"formUserReg.get('password')?.invalid && formUserReg.get('password')?.touched\"\n            class=\"validation\"\n          >\n            <small *ngIf=\"formUserReg.get('password')?.errors?.['required']\">\n              Поле не может быть пустым\n            </small>\n            <small *ngIf=\"formUserReg.get('password')?.hasError('minlength')\">\n              Введите пароль длиной хотя бы {{formUserReg.get('password')?.errors?.['minlength'].requiredLength}} символа\n              Вы ввели {{formUserReg.get('password')?.errors?.['minlength'].actualLength}}\n            </small>\n            <small *ngIf=\"formUserReg.get('password')?.hasError('maxlength')\">\n              Введите пароль длиной не более {{formUserReg.get('password')?.errors?.['maxlength'].requiredLength}} символов\n              Вы ввели {{formUserReg.get('password')?.errors?.['maxlength'].actualLength}}\n            </small>\n          </div>\n        </div>\n      </div>\n      <button class=\"btn reg__btn\" type=\"submit\" [disabled]=\"formUserReg.invalid\">Зарегистрировать</button>\n    </form>\n\n    <table class=\"users__table\">\n      <tr class=\"table_row\">\n        <th>ФИО</th>\n        <th>Роль</th>\n        <th>Телефон</th>\n        <th>Адрес</th>\n<!--        <th>Пароль</th>-->\n        <th>Ресторан</th>\n        <th>Работает</th>\n<!--        <th>Email</th>-->\n        <th>Изменение  Удаление</th>\n      </tr>\n      <tr class=\"table_row\" *ngFor=\"let user of users\">\n        <td>{{user.surname}} {{user.name}}</td>\n        <td>{{user.role.roleName}}</td>\n        <td>{{user.telephone}}</td>\n        <td>{{user.address}}</td>\n<!--        <td>{{user.password}}</td>-->\n        <td>пусто{{user.placeOfWork}}</td>\n        <td>{{user.working}}</td>\n        <td class=\"edit-delete-links\">\n          <a class=\"link-edit__user\" style=\"margin-bottom: 15px\">Изменить</a>\n          <a class=\"link-delete__user\" (click)=\"deleteUser(user.id)\">Удалить</a>\n        </td>\n      </tr>\n    </table>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}